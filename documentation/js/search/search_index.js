var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.493,1,1.702]],["body/controllers/AppController.html",[0,2.41,1,2.748,2,1.725,3,0.539,4,0.453,5,0.453,6,3.029,7,0.727,8,1.888,9,4.235,10,1.953,11,0.046,12,1.07,13,3.726,14,1.53,15,1.49,16,0.665,17,0.832,18,2.309,19,3.029,20,0.539,21,0.092,22,3.029,23,2.57,24,1.725,25,3.726,26,0.03,27,0.037,28,0.03]],["title/classes/AppLogger.html",[21,0.07,29,1.702]],["body/classes/AppLogger.html",[3,0.559,4,0.275,5,0.275,7,0.44,8,1.347,11,0.047,12,1.351,14,1.742,15,1.781,16,0.559,17,0.504,20,0.326,21,0.056,26,0.018,27,0.026,28,0.018,29,1.961,30,1.045,31,1.835,32,3.281,33,3.142,34,1.719,35,2.31,36,2.666,37,3.109,38,3.281,39,3.281,40,3.281,41,1.183,42,3.281,43,3.281,44,2.363,45,2.363,46,1.523,47,2.363,48,3.281,49,3.281,50,3.281,51,3.281,52,4.244,53,2.257,54,3.824,55,4.244,56,3.281,57,2.257,58,3.281,59,2.257,60,3.281,61,2.257,62,3.281,63,1.961,64,2.257,65,2.257,66,1.835,67,3.665,68,2.257,69,2.667,70,2.257,71,1.835,72,1.964,73,3.866,74,3.866,75,3.866,76,2.257,77,3.142,78,2.257,79,2.257,80,2.257,81,1.835,82,2.257,83,1.835,84,2.257,85,1.835,86,2.257,87,1.835,88,2.257,89,2.257,90,1.519,91,2.257,92,2.257,93,2.257]],["title/modules/AppModule.html",[94,0.923,95,1.702]],["body/modules/AppModule.html",[1,2.728,2,1.886,3,0.446,4,0.375,5,0.375,11,0.047,16,0.765,17,0.689,18,2.401,19,2.507,20,0.446,21,0.076,26,0.025,27,0.033,28,0.025,63,1.843,94,1.478,95,3.209,96,1.266,97,1.266,98,1.616,99,1.616,100,1.266,101,2.392,102,1.616,103,2.507,104,2.507,105,2.507,106,2.718,107,2.136,108,1.616,109,1.616,110,3.084,111,2.81,112,3.084,113,3.084,114,2.507,115,1.616,116,1.616,117,3.084,118,3.084,119,1.843,120,3.084,121,3.084,122,3.084,123,3.084,124,2.507]],["title/injectables/AppService.html",[18,1.319,125,0.923]],["body/injectables/AppService.html",[3,0.562,4,0.473,5,0.473,7,0.758,8,1.937,9,4.296,11,0.046,12,1.116,14,1.595,15,1.528,16,0.562,17,0.868,18,2.184,20,0.562,21,0.096,24,1.798,26,0.031,27,0.038,28,0.031,125,1.528,126,2.036,127,3.158,128,3.885,129,3.885,130,3.885]],["title/modules/AuthModule.html",[94,0.923,131,1.493]],["body/modules/AuthModule.html",[2,1.6,3,0.5,4,0.42,5,0.42,11,0.046,16,0.697,17,0.772,20,0.5,21,0.085,26,0.028,27,0.035,28,0.028,94,1.561,96,1.419,97,1.419,98,1.811,99,1.811,100,1.419,101,2.526,102,2.299,107,2.299,108,1.811,109,1.811,111,2.384,131,2.803,132,2.81,133,2.81,134,2.803,135,3.456,136,4.388,137,2.065,138,3.456,139,3.456,140,3.456,141,2.384,142,3.456,143,3.456,144,3.456,145,3.456]],["title/classes/Book.html",[21,0.07,146,1.039]],["body/classes/Book.html",[3,0.353,4,0.297,5,0.297,7,0.477,10,2.663,11,0.046,12,1.459,15,1.735,16,0.353,20,0.353,21,0.06,26,0.02,27,0.028,28,0.02,30,1.131,34,1.821,46,1.645,146,1.267,147,1.987,148,2.119,149,1.871,150,2.416,151,2.788,152,2.416,153,2.416,154,2.416,155,2.416,156,3.504,157,2.396,158,2.533,159,2.396,160,2.444,161,2.396,162,2.396,163,2.076,164,2.396,165,2.396,166,3.036,167,3.036,168,2.631,169,3.036,170,2.444,171,2.396,172,2.444,173,3.036,174,2.824,175,2.444,176,2.396,177,2.444,178,2.076,179,2.444,180,2.396,181,2.444,182,2.444,183,3.565,184,1.281,185,3.504]],["title/classes/Book-1.html",[21,0.059,146,0.872,186,1.943]],["body/classes/Book-1.html",[3,0.34,4,0.286,5,0.286,7,0.459,10,2.636,11,0.046,12,1.445,15,1.722,16,0.489,20,0.34,21,0.058,26,0.019,27,0.027,28,0.019,30,1.089,34,1.772,46,1.629,146,1.233,148,2.074,149,1.832,150,2.365,151,2.729,152,2.365,153,2.365,154,2.365,155,2.365,156,3.469,157,2.331,158,2.5,159,1.622,161,2.331,162,2.331,163,2.02,164,2.331,165,2.331,166,2.983,167,2.983,168,2.585,169,2.729,171,1.622,173,2.983,174,1.912,176,1.622,178,1.406,180,1.622,183,3.532,184,1.233,185,3.469,187,1.912,188,2.352,189,2.352,190,3.381,191,2.352,192,2.352,193,2.352,194,2.352,195,2.352,196,2.352,197,2.352,198,2.352,199,2.352,200,2.352,201,2.352,202,2.352,203,2.352,204,3.381,205,4.915,206,3.381,207,1.622]],["title/classes/BookDto.html",[21,0.07,208,1.493]],["body/classes/BookDto.html",[3,0.35,4,0.294,5,0.294,7,0.472,10,2.598,11,0.046,12,1.424,15,1.732,16,0.35,20,0.35,21,0.06,23,3.869,26,0.019,27,0.028,28,0.019,30,1.12,34,1.808,46,1.606,148,2.107,149,1.861,150,2.403,152,2.403,153,2.403,154,2.403,155,2.403,156,3.419,157,2.38,158,2.524,159,2.38,161,2.38,162,2.38,163,2.062,164,2.38,165,2.38,166,3.023,167,3.023,168,2.619,169,3.023,171,2.38,173,2.38,176,2.38,178,2.062,180,2.38,183,3.495,184,1.269,185,3.419,208,1.808,209,1.968,210,2.421,211,2.421,212,2.421,213,2.421,214,2.421,215,2.421,216,2.421]],["title/controllers/BooksController.html",[0,1.493,217,1.702]],["body/controllers/BooksController.html",[0,0.521,2,0.461,3,0.557,4,0.121,5,0.121,7,0.194,8,0.701,10,1.568,11,0.047,12,0.859,14,1.639,15,1.37,16,0.612,17,0.381,20,0.144,21,0.025,23,0.686,24,1.385,26,0.008,27,0.014,28,0.008,29,1.34,33,1.388,35,1.34,36,0.686,37,1.177,41,0.521,44,1.568,45,1.568,46,1.247,47,1.568,54,2.654,63,1.589,66,0.809,67,3.13,69,1.822,71,1.388,72,1.385,77,1.822,81,1.388,83,0.809,87,0.809,119,0.595,124,0.809,137,0.595,146,1.404,149,2.145,158,2.018,163,2.639,184,0.521,208,1.83,217,1.02,218,0.809,219,0.995,220,0.809,221,1.388,222,1.822,223,1.388,224,1.822,225,1.822,226,0.995,227,5.09,228,3.13,229,0.995,230,2.658,231,3.59,232,0.995,233,3.994,234,3.686,235,5.211,236,2.658,237,0.995,238,1.707,239,1.707,240,0.995,241,2.755,242,3.686,243,1.388,244,0.995,245,3.439,246,0.995,247,3.265,248,2.242,249,1.707,250,0.995,251,3.265,252,3.851,253,0.995,254,0.995,255,1.707,256,3.686,257,0.995,258,3.265,259,0.995,260,1.707,261,1.388,262,1.707,263,1.388,264,0.995,265,0.995,266,1.707,267,1.388,268,0.995,269,1.707,270,0.995,271,0.995,272,1.707,273,2.658,274,0.995,275,2.658,276,3.686,277,2.658,278,2.242,279,2.242,280,1.388,281,1.707,282,0.995,283,1.511,284,0.809,285,0.809,286,0.809,287,3.265,288,3.493,289,0.995,290,0.995,291,0.686,292,0.995,293,0.995,294,0.995,295,0.995,296,0.995,297,0.995,298,0.995,299,0.809,300,0.995,301,0.995,302,0.995,303,0.995,304,0.995,305,0.995,306,0.995,307,0.995,308,0.995,309,0.809,310,0.995,311,0.995,312,0.995,313,0.995,314,1.707,315,1.707,316,1.707,317,2.992,318,2.432,319,1.707,320,2.242,321,0.995,322,0.995,323,0.995,324,2.992,325,3.265,326,0.995,327,0.995,328,3.994,329,3.994,330,3.994,331,0.995,332,3.994,333,4.12,334,2.992,335,2.242,336,2.992,337,3.265,338,0.995,339,2.242,340,0.995,341,2.242,342,1.707,343,0.995,344,0.995,345,0.995,346,0.995,347,0.995,348,0.995]],["title/modules/BooksModule.html",[94,0.923,106,1.493]],["body/modules/BooksModule.html",[2,1.906,3,0.453,4,0.381,5,0.381,11,0.046,16,0.768,17,0.7,20,0.453,21,0.077,26,0.025,27,0.033,28,0.025,94,1.49,96,1.286,97,1.286,98,1.641,99,1.641,100,1.286,101,2.41,102,1.641,106,2.883,107,2.158,108,1.641,109,1.641,111,2.839,114,2.546,115,1.641,131,2.73,146,1.142,217,2.748,283,2.411,284,2.546,291,2.16,349,2.546,350,2.546,351,2.546,352,2.73,353,3.132,354,3.132,355,3.132,356,3.132,357,3.132,358,3.132]],["title/injectables/BooksService.html",[125,0.923,283,1.319]],["body/injectables/BooksService.html",[3,0.193,4,0.162,5,0.162,7,0.26,8,0.896,11,0.046,12,1.15,14,1.45,15,1.4,16,0.511,17,0.298,20,0.193,21,0.033,24,1.755,26,0.011,27,0.018,28,0.011,34,1.144,35,0.797,41,1.144,44,1.988,45,1.988,46,1.228,47,1.988,115,0.699,125,0.707,126,0.699,146,1.01,148,1.678,149,1.482,150,1.914,151,2.615,152,1.914,153,1.914,154,1.914,155,1.914,158,2.331,168,1.305,178,1.305,186,1.775,207,0.92,208,2.098,220,2.253,221,1.775,222,1.775,223,1.775,224,1.775,225,1.775,228,2.871,231,3.083,241,3.068,243,3.083,245,2.603,261,3.396,263,3.083,267,1.775,280,1.084,283,1.011,286,1.084,291,0.92,359,1.084,360,3.779,361,1.334,362,2.603,363,1.334,364,2.183,365,2.183,366,1.334,367,2.183,368,1.334,369,2.183,370,1.334,371,1.334,372,2.183,373,1.334,374,2.183,375,1.334,376,0.92,377,0.92,378,4.649,379,3.202,380,2.183,381,2.183,382,2.183,383,2.183,384,2.183,385,2.183,386,2.183,387,2.183,388,2.183,389,2.183,390,2.183,391,3.792,392,2.183,393,2.183,394,2.183,395,3.202,396,3.202,397,2.183,398,2.183,399,2.183,400,2.183,401,2.183,402,4.177,403,2.183,404,2.183,405,2.183,406,2.183,407,2.183,408,2.183,409,2.183,410,2.183,411,2.183,412,2.183,413,3.202,414,2.183,415,2.183,416,2.183,417,2.183,418,2.183,419,2.183,420,2.183,421,2.183,422,2.183,423,2.183,424,3.202,425,3.202,426,3.202,427,2.183,428,2.183,429,1.775,430,2.183,431,2.183,432,2.183,433,2.183,434,3.202,435,2.183,436,2.183,437,2.183,438,2.183,439,2.183,440,2.183,441,2.183,442,2.183,443,2.183,444,2.183,445,3.202,446,2.183,447,2.183,448,3.792,449,2.183,450,2.183,451,2.183,452,2.183,453,2.183,454,2.183,455,2.183,456,2.183,457,2.183,458,2.183,459,2.183,460,1.334,461,1.084,462,1.084,463,1.334,464,1.334,465,3.532,466,1.334,467,1.334,468,1.334,469,1.334,470,1.334,471,1.334,472,1.334,473,1.334,474,1.334,475,1.334,476,1.334,477,1.334,478,1.334,479,1.334,480,1.334]],["title/classes/ConfigService.html",[21,0.07,116,1.493]],["body/classes/ConfigService.html",[3,0.371,4,0.312,5,0.312,7,0.5,8,1.475,11,0.047,12,1.291,14,1.703,15,1.715,16,0.371,20,0.371,21,0.063,22,2.083,24,1.92,26,0.021,27,0.029,28,0.021,30,1.186,35,2.479,37,1.768,41,1.343,44,2.174,45,2.174,46,1.589,47,2.174,72,1.663,115,1.343,116,2.356,309,3.655,376,1.768,377,3.101,481,1.768,482,4.907,483,3.593,484,4.496,485,3.593,486,2.563,487,3.593,488,2.563,489,3.593,490,3.593,491,2.563,492,2.563,493,2.563,494,4.148,495,3.593,496,4.496,497,2.563,498,2.563,499,2.563,500,2.563,501,2.563,502,3.593,503,2.563,504,2.083,505,2.563,506,2.563,507,2.563,508,2.563,509,2.563,510,2.083,511,2.563,512,2.563,513,2.563,514,2.563,515,2.563,516,2.563,517,2.563,518,2.563,519,2.563,520,2.563,521,2.563,522,2.563,523,2.563,524,2.083,525,2.083,526,2.083,527,2.083,528,2.083,529,2.083]],["title/injectables/JwtStrategy.html",[125,0.923,134,1.493]],["body/injectables/JwtStrategy.html",[3,0.478,4,0.402,5,0.402,7,0.646,8,1.751,11,0.046,12,1.225,14,1.358,16,0.683,17,0.739,20,0.478,21,0.082,24,1.531,26,0.027,27,0.034,28,0.027,41,2.475,44,1.734,45,1.734,46,1.071,47,1.734,72,1.531,125,1.382,126,1.734,134,2.236,137,1.977,141,2.281,241,2.942,299,2.689,360,3.839,461,2.689,462,2.689,504,2.689,530,2.689,531,4.266,532,3.308,533,4.266,534,3.308,535,4.722,536,3.308,537,3.308,538,3.308,539,2.689,540,2.689,541,3.308,542,3.308,543,3.308,544,3.308,545,3.308,546,3.308,547,3.308,548,3.308]],["title/injectables/MyLogger.html",[90,1.319,125,0.923]],["body/injectables/MyLogger.html",[3,0.582,4,0.49,5,0.49,11,0.045,16,0.582,17,0.899,20,0.582,21,0.099,26,0.032,27,0.039,28,0.032,36,3.559,90,2.231,125,1.561,126,2.11,540,3.919,549,2.776,550,3.273,551,4.821,552,4.026]],["title/modules/MyLoggerModule.html",[94,0.923,352,1.493]],["body/modules/MyLoggerModule.html",[3,0.514,4,0.432,5,0.432,11,0.045,16,0.646,17,0.794,20,0.514,21,0.088,26,0.029,27,0.036,28,0.029,90,2.629,94,1.582,96,1.459,97,1.459,98,1.863,99,1.863,100,1.459,101,2.559,102,2.559,107,2.34,108,1.863,109,1.863,352,2.865,549,2.451,553,2.889,554,2.889,555,2.889,556,3.554,557,3.554]],["title/coverage.html",[558,2.665]],["body/coverage.html",[0,2.198,1,1.926,5,0.392,6,2.62,11,0.046,18,1.492,21,0.127,26,0.026,27,0.034,28,0.026,29,1.926,31,2.62,46,1.044,72,1.492,90,1.492,100,1.323,116,2.198,125,1.6,127,2.62,134,1.689,146,1.529,147,2.62,187,2.62,208,1.689,209,2.62,217,1.926,218,2.62,283,1.492,359,2.62,481,2.893,530,2.62,549,2.223,550,2.62,558,2.223,559,3.223,560,3.223,561,3.223,562,5.632,563,4.195,564,3.223,565,4.195,566,4.195,567,3.223,568,3.223,569,3.223,570,4.664,571,2.62,572,3.223,573,3.223,574,3.223,575,3.223]],["title/dependencies.html",[97,1.404,576,2.391]],["body/dependencies.html",[11,0.047,17,0.777,26,0.028,27,0.035,28,0.028,63,2.633,97,1.429,115,1.824,119,2.08,137,2.08,141,2.4,184,1.824,207,2.4,285,3.582,510,2.829,539,3.931,577,4.836,578,3.48,579,3.48,580,4.836,581,3.48,582,3.48,583,3.48,584,3.48,585,3.48,586,3.48,587,3.48,588,3.48,589,3.48,590,3.48,591,3.48,592,3.48,593,3.48,594,3.48,595,3.48,596,3.48,597,3.48,598,3.48,599,3.48,600,3.48,601,3.48,602,3.48]],["title/miscellaneous/functions.html",[603,1.429,604,2.78]],["body/miscellaneous/functions.html",[7,0.847,11,0.041,26,0.035,27,0.041,28,0.035,100,2.186,571,3.528,603,2.593,604,3.528,605,4.34]],["title/index.html",[7,0.467,606,2.391,607,2.391]],["body/index.html",[4,0.383,11,0.046,26,0.025,27,0.033,28,0.025,85,2.562,119,2.757,148,1.652,149,1.459,318,2.562,362,2.562,558,2.174,608,3.152,609,3.152,610,4.134,611,3.152,612,3.152,613,3.152,614,3.152,615,3.152,616,3.152,617,3.152,618,3.152,619,3.152,620,3.152,621,3.152,622,3.152,623,5.318,624,3.152,625,3.152,626,3.152,627,5.218,628,3.152,629,4.134,630,3.152,631,3.152,632,3.152,633,4.134,634,4.134,635,3.152,636,3.152,637,3.152,638,4.134,639,4.134,640,3.152,641,3.152,642,3.152,643,3.152,644,3.152,645,2.562,646,3.152,647,3.152,648,3.152,649,3.152,650,3.152,651,3.152,652,3.152,653,3.152,654,3.152,655,3.152,656,3.152,657,3.152,658,3.152,659,3.152,660,3.152,661,3.152,662,3.152]],["title/modules.html",[96,1.586]],["body/modules.html",[11,0.039,26,0.033,27,0.039,28,0.033,95,2.455,96,1.686,106,2.153,131,2.153,352,2.153,645,4.377,663,5.384,664,5.384,665,5.384]],["title/overview.html",[666,3.142]],["body/overview.html",[2,1.526,11,0.045,18,2.182,26,0.027,27,0.034,28,0.027,30,1.526,90,2.488,94,1.068,95,3.157,96,1.353,97,1.353,98,1.728,99,1.728,100,1.353,101,1.728,102,1.728,103,2.68,104,2.68,105,2.68,106,2.884,107,2.231,108,1.728,109,1.728,126,1.728,131,2.703,132,2.68,133,2.68,134,2.471,283,2.182,349,2.68,350,2.68,351,2.68,352,2.769,429,2.68,553,2.68,554,2.68,555,2.68,666,2.68,667,4.257,668,3.297]],["title/miscellaneous/variables.html",[603,1.429,669,2.78]],["body/miscellaneous/variables.html",[7,0.812,11,0.044,26,0.033,27,0.04,28,0.033,72,1.925,116,2.576,376,2.869,377,2.869,481,2.869,524,3.381,525,3.381,526,3.381,527,3.381,528,3.381,529,3.381,603,2.486,669,3.381,670,4.16]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":186,"title":{"classes/Book-1.html":{}},"body":{"injectables/BooksService.html":{}}}],["1.0.0",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":429,"title":{},"body":{"injectables/BooksService.html":{},"overview.html":{}}}],["2.18.1",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":233,"title":{},"body":{"controllers/BooksController.html":{}}}],["256",{"_index":423,"title":{},"body":{"injectables/BooksService.html":{}}}],["3.0.2",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":667,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":238,"title":{},"body":{"controllers/BooksController.html":{}}}],["5",{"_index":668,"title":{},"body":{"overview.html":{}}}],["592",{"_index":178,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["592})@column",{"_index":198,"title":{},"body":{"classes/Book-1.html":{}}}],["6.5.4",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":174,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{}}}],["99})@primarygeneratedcolumn",{"_index":194,"title":{},"body":{"classes/Book-1.html":{}}}],["accidentada",{"_index":389,"title":{},"body":{"injectables/BooksService.html":{}}}],["actualizado",{"_index":273,"title":{},"body":{"controllers/BooksController.html":{}}}],["actualizar",{"_index":272,"title":{},"body":{"controllers/BooksController.html":{}}}],["al",{"_index":452,"title":{},"body":{"injectables/BooksService.html":{}}}],["alfaguara",{"_index":422,"title":{},"body":{"injectables/BooksService.html":{}}}],["amazing",{"_index":646,"title":{},"body":{"index.html":{}}}],["amazon.com/images/i/41%2b",{"_index":427,"title":{},"body":{"injectables/BooksService.html":{}}}],["amazon.com/images/i/51iyz5mq8yl._sx326_bo1,204,203,200_.jpg",{"_index":459,"title":{},"body":{"injectables/BooksService.html":{}}}],["ameno",{"_index":381,"title":{},"body":{"injectables/BooksService.html":{}}}],["angular",{"_index":619,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":290,"title":{},"body":{"controllers/BooksController.html":{}}}],["apibearerauth('access",{"_index":298,"title":{},"body":{"controllers/BooksController.html":{}}}],["apioperation",{"_index":287,"title":{},"body":{"controllers/BooksController.html":{}}}],["apiproperty",{"_index":183,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["apiproperty({example",{"_index":156,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["apiresponse",{"_index":288,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags",{"_index":289,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags('book",{"_index":295,"title":{},"body":{"controllers/BooksController.html":{}}}],["app",{"_index":625,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["app.logger",{"_index":292,"title":{},"body":{"controllers/BooksController.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":616,"title":{},"body":{"index.html":{}}}],["applogger",{"_index":29,"title":{"classes/AppLogger.html":{}},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"coverage.html":{}}}],["appmodule",{"_index":95,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arturo",{"_index":419,"title":{},"body":{"injectables/BooksService.html":{}}}],["async",{"_index":360,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["atrás",{"_index":406,"title":{},"body":{"injectables/BooksService.html":{}}}],["authguard",{"_index":294,"title":{},"body":{"controllers/BooksController.html":{}}}],["authmodule",{"_index":131,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":148,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{},"index.html":{}}}],["autor",{"_index":396,"title":{},"body":{"injectables/BooksService.html":{}}}],["await",{"_index":465,"title":{},"body":{"injectables/BooksService.html":{}}}],["backers",{"_index":647,"title":{},"body":{"index.html":{}}}],["banqueros",{"_index":449,"title":{},"body":{"injectables/BooksService.html":{}}}],["below",{"_index":316,"title":{},"body":{"controllers/BooksController.html":{}}}],["body",{"_index":279,"title":{},"body":{"controllers/BooksController.html":{}}}],["book",{"_index":146,"title":{"classes/Book.html":{},"classes/Book-1.html":{}},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["book.dto",{"_index":286,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["book.entity",{"_index":291,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["bookdto",{"_index":208,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["booket",{"_index":458,"title":{},"body":{"injectables/BooksService.html":{}}}],["bookid",{"_index":245,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books.controller",{"_index":354,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":284,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":217,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["booksmodule",{"_index":106,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":364,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":283,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["book})@apiresponse({status",{"_index":237,"title":{},"body":{"controllers/BooksController.html":{}}}],["bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":665,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":663,"title":{},"body":{"modules.html":{}}}],["building",{"_index":611,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":269,"title":{},"body":{"controllers/BooksController.html":{}}}],["cervantes",{"_index":159,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["cervantes'})@column",{"_index":188,"title":{},"body":{"classes/Book-1.html":{}}}],["class",{"_index":21,"title":{"classes/AppLogger.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{}},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{}}}],["classes",{"_index":30,"title":{},"body":{"classes/AppLogger.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":349,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_imports",{"_index":350,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_providers",{"_index":351,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_myloggermodule",{"_index":553,"title":{},"body":{"modules/MyLoggerModule.html":{},"overview.html":{}}}],["cluster_myloggermodule_exports",{"_index":554,"title":{},"body":{"modules/MyLoggerModule.html":{},"overview.html":{}}}],["cluster_myloggermodule_providers",{"_index":555,"title":{},"body":{"modules/MyLoggerModule.html":{},"overview.html":{}}}],["colectivo",{"_index":453,"title":{},"body":{"injectables/BooksService.html":{}}}],["column",{"_index":205,"title":{},"body":{"classes/Book-1.html":{}}}],["column('text",{"_index":190,"title":{},"body":{"classes/Book-1.html":{}}}],["combined.log",{"_index":319,"title":{},"body":{"controllers/BooksController.html":{}}}],["como",{"_index":432,"title":{},"body":{"injectables/BooksService.html":{}}}],["concebida",{"_index":394,"title":{},"body":{"injectables/BooksService.html":{}}}],["conferencia",{"_index":450,"title":{},"body":{"injectables/BooksService.html":{}}}],["config.logger.level",{"_index":68,"title":{},"body":{"classes/AppLogger.html":{}}}],["config/config/config.service",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":116,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env).ensurevalues",{"_index":524,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(request.query",{"_index":327,"title":{},"body":{"controllers/BooksController.html":{}}}],["const",{"_index":502,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(booksrepository",{"_index":361,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(env",{"_index":486,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(label",{"_index":42,"title":{},"body":{"classes/AppLogger.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{}}}],["contada",{"_index":430,"title":{},"body":{"injectables/BooksService.html":{}}}],["contarlo",{"_index":415,"title":{},"body":{"injectables/BooksService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"coverage.html":{}}}],["controller('books",{"_index":296,"title":{},"body":{"controllers/BooksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["coverage",{"_index":558,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":236,"title":{},"body":{"controllers/BooksController.html":{}}}],["crear",{"_index":230,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["createbook(@req",{"_index":343,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook(newbook",{"_index":365,"title":{},"body":{"injectables/BooksService.html":{}}}],["createbook(request",{"_index":226,"title":{},"body":{"controllers/BooksController.html":{}}}],["createquerybuilder",{"_index":470,"title":{},"body":{"injectables/BooksService.html":{}}}],["data",{"_index":330,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":519,"title":{},"body":{"classes/ConfigService.html":{}}}],["date.now",{"_index":329,"title":{},"body":{"controllers/BooksController.html":{}}}],["datos",{"_index":234,"title":{},"body":{"controllers/BooksController.html":{}}}],["dd",{"_index":305,"title":{},"body":{"controllers/BooksController.html":{}}}],["de",{"_index":158,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["debug",{"_index":79,"title":{},"body":{"classes/AppLogger.html":{}}}],["debug.log",{"_index":78,"title":{},"body":{"classes/AppLogger.html":{}}}],["declarations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["default",{"_index":376,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultmeta",{"_index":312,"title":{},"body":{"controllers/BooksController.html":{}}}],["defaultstrategy",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["del",{"_index":163,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["delete",{"_index":280,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["delete(':bookid",{"_index":345,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid')@apioperation({summary",{"_index":246,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebook",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebook(bookid",{"_index":367,"title":{},"body":{"injectables/BooksService.html":{}}}],["deletebook(request",{"_index":244,"title":{},"body":{"controllers/BooksController.html":{}}}],["dependencies",{"_index":97,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desapasionada",{"_index":438,"title":{},"body":{"injectables/BooksService.html":{}}}],["description",{"_index":149,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"index.html":{}}}],["desde",{"_index":407,"title":{},"body":{"injectables/BooksService.html":{}}}],["development",{"_index":626,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":242,"title":{},"body":{"controllers/BooksController.html":{}}}],["dirname",{"_index":74,"title":{},"body":{"classes/AppLogger.html":{}}}],["disfrutar",{"_index":403,"title":{},"body":{"injectables/BooksService.html":{}}}],["dist/**/*.entity.js",{"_index":522,"title":{},"body":{"classes/ConfigService.html":{}}}],["divertirme",{"_index":400,"title":{},"body":{"injectables/BooksService.html":{}}}],["documentation",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["don",{"_index":166,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["duration",{"_index":337,"title":{},"body":{"controllers/BooksController.html":{}}}],["e2e",{"_index":635,"title":{},"body":{"index.html":{}}}],["e981m1l._sx311_bo1,204,203,200_.jpg",{"_index":428,"title":{},"body":{"injectables/BooksService.html":{}}}],["edición",{"_index":162,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["efficient",{"_index":612,"title":{},"body":{"index.html":{}}}],["el",{"_index":243,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["elapsedtime",{"_index":333,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminado",{"_index":249,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminar",{"_index":247,"title":{},"body":{"controllers/BooksController.html":{}}}],["ello",{"_index":414,"title":{},"body":{"injectables/BooksService.html":{}}}],["en",{"_index":397,"title":{},"body":{"injectables/BooksService.html":{}}}],["ensurevalues",{"_index":483,"title":{},"body":{"classes/ConfigService.html":{}}}],["ensurevalues(keys",{"_index":490,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":521,"title":{},"body":{"classes/ConfigService.html":{}}}],["entity",{"_index":204,"title":{},"body":{"classes/Book-1.html":{}}}],["env",{"_index":489,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":507,"title":{},"body":{"classes/ConfigService.html":{}}}],["episcopal",{"_index":451,"title":{},"body":{"injectables/BooksService.html":{}}}],["error",{"_index":37,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"classes/ConfigService.html":{}}}],["error(`config",{"_index":505,"title":{},"body":{"classes/ConfigService.html":{}}}],["error(message",{"_index":51,"title":{},"body":{"classes/AppLogger.html":{}}}],["error.log",{"_index":81,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["es",{"_index":442,"title":{},"body":{"injectables/BooksService.html":{}}}],["escribe",{"_index":433,"title":{},"body":{"injectables/BooksService.html":{}}}],["escrito",{"_index":416,"title":{},"body":{"injectables/BooksService.html":{}}}],["escépticos",{"_index":431,"title":{},"body":{"injectables/BooksService.html":{}}}],["eslava",{"_index":456,"title":{},"body":{"injectables/BooksService.html":{}}}],["españa",{"_index":379,"title":{},"body":{"injectables/BooksService.html":{}}}],["específico",{"_index":252,"title":{},"body":{"controllers/BooksController.html":{}}}],["específico'})@apiresponse({status",{"_index":248,"title":{},"body":{"controllers/BooksController.html":{}}}],["est",{"_index":443,"title":{},"body":{"injectables/BooksService.html":{}}}],["esta",{"_index":161,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["example",{"_index":185,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["execute",{"_index":473,"title":{},"body":{"injectables/BooksService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{}}}],["exports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["express",{"_index":285,"title":{},"body":{"controllers/BooksController.html":{},"dependencies.html":{}}}],["extends",{"_index":540,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{}}}],["extractjwt",{"_index":537,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{}}}],["filename",{"_index":77,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["filtrar",{"_index":262,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findall(@req",{"_index":326,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall(params",{"_index":369,"title":{},"body":{"injectables/BooksService.html":{}}}],["findall(request",{"_index":253,"title":{},"body":{"controllers/BooksController.html":{}}}],["findbook",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findbook(bookid",{"_index":372,"title":{},"body":{"injectables/BooksService.html":{}}}],["findbook(request",{"_index":264,"title":{},"body":{"controllers/BooksController.html":{}}}],["finishtime",{"_index":332,"title":{},"body":{"controllers/BooksController.html":{}}}],["forbidden",{"_index":239,"title":{},"body":{"controllers/BooksController.html":{}}}],["format",{"_index":69,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["format.errors",{"_index":307,"title":{},"body":{"controllers/BooksController.html":{}}}],["format.json",{"_index":311,"title":{},"body":{"controllers/BooksController.html":{}}}],["format.splat",{"_index":310,"title":{},"body":{"controllers/BooksController.html":{}}}],["framework",{"_index":610,"title":{},"body":{"index.html":{}}}],["from(book",{"_index":471,"title":{},"body":{"injectables/BooksService.html":{}}}],["function",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":604,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["galán",{"_index":457,"title":{},"body":{"injectables/BooksService.html":{}}}],["gay",{"_index":454,"title":{},"body":{"injectables/BooksService.html":{}}}],["genre",{"_index":150,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["get(':bookid",{"_index":338,"title":{},"body":{"controllers/BooksController.html":{}}}],["get(':bookid')@apioperation({summary",{"_index":265,"title":{},"body":{"controllers/BooksController.html":{}}}],["get()@apioperation({summary",{"_index":254,"title":{},"body":{"controllers/BooksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":606,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":484,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":485,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":495,"title":{},"body":{"classes/ConfigService.html":{}}}],["gobernantes",{"_index":447,"title":{},"body":{"injectables/BooksService.html":{}}}],["grow",{"_index":642,"title":{},"body":{"index.html":{}}}],["halagar",{"_index":445,"title":{},"body":{"injectables/BooksService.html":{}}}],["hasta",{"_index":410,"title":{},"body":{"injectables/BooksService.html":{}}}],["heavily",{"_index":617,"title":{},"body":{"index.html":{}}}],["hecha",{"_index":444,"title":{},"body":{"injectables/BooksService.html":{}}}],["hello",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":653,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":306,"title":{},"body":{"controllers/BooksController.html":{}}}],["hidalgo",{"_index":165,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["historia",{"_index":378,"title":{},"body":{"injectables/BooksService.html":{}}}],["host",{"_index":511,"title":{},"body":{"classes/ConfigService.html":{}}}],["httpexception",{"_index":462,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://images",{"_index":424,"title":{},"body":{"injectables/BooksService.html":{}}}],["https://nestjs.com",{"_index":659,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":461,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpstatus.unauthorized",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":151,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"injectables/BooksService.html":{}}}],["identificador",{"_index":251,"title":{},"body":{"controllers/BooksController.html":{}}}],["identifier",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":152,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["images",{"_index":426,"title":{},"body":{"injectables/BooksService.html":{}}}],["implements",{"_index":32,"title":{},"body":{"classes/AppLogger.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{}}}],["info.log",{"_index":83,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["información",{"_index":266,"title":{},"body":{"controllers/BooksController.html":{}}}],["ingenioso",{"_index":164,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["initializelogger",{"_index":38,"title":{},"body":{"classes/AppLogger.html":{}}}],["initializelogger(label",{"_index":56,"title":{},"body":{"classes/AppLogger.html":{}}}],["inject",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{}}}],["inject(winston_module_nest_provider",{"_index":322,"title":{},"body":{"controllers/BooksController.html":{}}}],["injectable",{"_index":125,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"overview.html":{}}}],["injectrepository",{"_index":463,"title":{},"body":{"injectables/BooksService.html":{}}}],["injectrepository(book",{"_index":464,"title":{},"body":{"injectables/BooksService.html":{}}}],["inspired",{"_index":618,"title":{},"body":{"index.html":{}}}],["installation",{"_index":622,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":624,"title":{},"body":{"index.html":{}}}],["irónico",{"_index":384,"title":{},"body":{"injectables/BooksService.html":{}}}],["join",{"_index":649,"title":{},"body":{"index.html":{}}}],["json",{"_index":342,"title":{},"body":{"controllers/BooksController.html":{}}}],["juan",{"_index":455,"title":{},"body":{"injectables/BooksService.html":{}}}],["justa",{"_index":437,"title":{},"body":{"injectables/BooksService.html":{}}}],["jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":134,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":500,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":656,"title":{},"body":{"index.html":{}}}],["key",{"_index":498,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":492,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":508,"title":{},"body":{"classes/ConfigService.html":{}}}],["la",{"_index":168,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["label",{"_index":48,"title":{},"body":{"classes/AppLogger.html":{}}}],["legend",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["level",{"_index":67,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["libro",{"_index":235,"title":{},"body":{"controllers/BooksController.html":{}}}],["libro'})@apiresponse({status",{"_index":232,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros",{"_index":258,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros'})@apiresponse({status",{"_index":257,"title":{},"body":{"controllers/BooksController.html":{}}}],["license",{"_index":662,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":639,"title":{},"body":{"index.html":{}}}],["lista",{"_index":256,"title":{},"body":{"controllers/BooksController.html":{}}}],["literal",{"_index":487,"title":{},"body":{"classes/ConfigService.html":{}}}],["lo",{"_index":441,"title":{},"body":{"injectables/BooksService.html":{}}}],["local",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":39,"title":{},"body":{"classes/AppLogger.html":{}}}],["log(message",{"_index":58,"title":{},"body":{"classes/AppLogger.html":{}}}],["log/debug",{"_index":76,"title":{},"body":{"classes/AppLogger.html":{}}}],["log/error",{"_index":80,"title":{},"body":{"classes/AppLogger.html":{}}}],["log/info",{"_index":82,"title":{},"body":{"classes/AppLogger.html":{}}}],["logger",{"_index":36,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"injectables/MyLogger.html":{}}}],["logger.module",{"_index":356,"title":{},"body":{"modules/BooksModule.html":{}}}],["logger.module.ts",{"_index":556,"title":{},"body":{"modules/MyLoggerModule.html":{}}}],["logger.service",{"_index":557,"title":{},"body":{"modules/MyLoggerModule.html":{}}}],["logger.service.ts",{"_index":550,"title":{},"body":{"injectables/MyLogger.html":{},"coverage.html":{}}}],["loggerservice",{"_index":33,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["logs",{"_index":315,"title":{},"body":{"controllers/BooksController.html":{}}}],["los",{"_index":391,"title":{},"body":{"injectables/BooksService.html":{}}}],["mancha",{"_index":169,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["mancha'})@column",{"_index":202,"title":{},"body":{"classes/Book-1.html":{}}}],["manera",{"_index":417,"title":{},"body":{"injectables/BooksService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":54,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["metadata",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["miguel",{"_index":157,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["mirar",{"_index":405,"title":{},"body":{"injectables/BooksService.html":{}}}],["miscellaneous",{"_index":603,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":506,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":638,"title":{},"body":{"index.html":{}}}],["mm",{"_index":304,"title":{},"body":{"controllers/BooksController.html":{}}}],["mode",{"_index":629,"title":{},"body":{"index.html":{}}}],["modificar",{"_index":275,"title":{},"body":{"controllers/BooksController.html":{}}}],["module",{"_index":94,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["modules",{"_index":96,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":652,"title":{},"body":{"index.html":{}}}],["mylogger",{"_index":90,"title":{"injectables/MyLogger.html":{}},"body":{"classes/AppLogger.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{},"overview.html":{}}}],["myloggermodule",{"_index":352,"title":{"modules/MyLoggerModule.html":{}},"body":{"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["mys3cr3tk3y",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["mysql",{"_index":510,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":657,"title":{},"body":{"index.html":{}}}],["na.ssl",{"_index":425,"title":{},"body":{"injectables/BooksService.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":661,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":184,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["new",{"_index":72,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbook",{"_index":228,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["ni",{"_index":448,"title":{},"body":{"injectables/BooksService.html":{}}}],["nico",{"_index":387,"title":{},"body":{"injectables/BooksService.html":{}}}],["ninguna",{"_index":440,"title":{},"body":{"injectables/BooksService.html":{}}}],["node.js",{"_index":609,"title":{},"body":{"index.html":{}}}],["novela",{"_index":171,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["novela'})@column",{"_index":192,"title":{},"body":{"classes/Book-1.html":{}}}],["npm",{"_index":623,"title":{},"body":{"index.html":{}}}],["nuestra",{"_index":388,"title":{},"body":{"injectables/BooksService.html":{}}}],["number",{"_index":173,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["object.assign(toupdate",{"_index":479,"title":{},"body":{"injectables/BooksService.html":{}}}],["obra",{"_index":393,"title":{},"body":{"injectables/BooksService.html":{}}}],["obtener",{"_index":255,"title":{},"body":{"controllers/BooksController.html":{}}}],["open",{"_index":640,"title":{},"body":{"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["options",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["ortodoxa",{"_index":418,"title":{},"body":{"injectables/BooksService.html":{}}}],["out",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["overview",{"_index":666,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":576,"title":{"dependencies.html":{}},"body":{}}],["pages",{"_index":153,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["palabras",{"_index":398,"title":{},"body":{"injectables/BooksService.html":{}}}],["para",{"_index":261,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["param",{"_index":276,"title":{},"body":{"controllers/BooksController.html":{}}}],["param('bookid",{"_index":339,"title":{},"body":{"controllers/BooksController.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["params",{"_index":371,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(bookid",{"_index":475,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(this.getvalue('tutorial_port",{"_index":514,"title":{},"body":{"classes/ConfigService.html":{}}}],["parámetros",{"_index":260,"title":{},"body":{"controllers/BooksController.html":{}}}],["passport",{"_index":539,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":517,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":62,"title":{},"body":{"classes/AppLogger.html":{}}}],["path.join(__dirname",{"_index":75,"title":{},"body":{"classes/AppLogger.html":{}}}],["payload",{"_index":535,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pero",{"_index":385,"title":{},"body":{"injectables/BooksService.html":{}}}],["personal",{"_index":382,"title":{},"body":{"injectables/BooksService.html":{}}}],["pg",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":650,"title":{},"body":{"index.html":{}}}],["poco",{"_index":413,"title":{},"body":{"injectables/BooksService.html":{}}}],["por",{"_index":395,"title":{},"body":{"injectables/BooksService.html":{}}}],["porque",{"_index":439,"title":{},"body":{"injectables/BooksService.html":{}}}],["port",{"_index":513,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":278,"title":{},"body":{"controllers/BooksController.html":{}}}],["post()@apioperation({summary",{"_index":229,"title":{},"body":{"controllers/BooksController.html":{}}}],["prefix",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{}}}],["presente",{"_index":411,"title":{},"body":{"injectables/BooksService.html":{}}}],["pretende",{"_index":434,"title":{},"body":{"injectables/BooksService.html":{}}}],["pretexto",{"_index":404,"title":{},"body":{"injectables/BooksService.html":{}}}],["primarygeneratedcolumn",{"_index":206,"title":{},"body":{"classes/Book-1.html":{}}}],["private",{"_index":35,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["process.env.node_env",{"_index":84,"title":{},"body":{"classes/AppLogger.html":{}}}],["production",{"_index":85,"title":{},"body":{"classes/AppLogger.html":{},"index.html":{}}}],["progressive",{"_index":608,"title":{},"body":{"index.html":{}}}],["project",{"_index":641,"title":{},"body":{"index.html":{}}}],["promise",{"_index":241,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["properties",{"_index":34,"title":{},"body":{"classes/AppLogger.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["property",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["public",{"_index":482,"title":{},"body":{"classes/ConfigService.html":{}}}],["publisher",{"_index":154,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["put",{"_index":281,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid",{"_index":347,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid')@apioperation({summary",{"_index":271,"title":{},"body":{"controllers/BooksController.html":{}}}],["pérez",{"_index":420,"title":{},"body":{"injectables/BooksService.html":{}}}],["quick",{"_index":317,"title":{},"body":{"controllers/BooksController.html":{}}}],["quijote",{"_index":167,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["ratos",{"_index":383,"title":{},"body":{"injectables/BooksService.html":{}}}],["read",{"_index":651,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["reflect",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["reflexionar",{"_index":412,"title":{},"body":{"injectables/BooksService.html":{}}}],["relato",{"_index":380,"title":{},"body":{"injectables/BooksService.html":{}}}],["releer",{"_index":401,"title":{},"body":{"injectables/BooksService.html":{}}}],["remotos",{"_index":409,"title":{},"body":{"injectables/BooksService.html":{}}}],["repository",{"_index":362,"title":{},"body":{"injectables/BooksService.html":{},"index.html":{}}}],["req",{"_index":277,"title":{},"body":{"controllers/BooksController.html":{}}}],["request",{"_index":227,"title":{},"body":{"controllers/BooksController.html":{}}}],["require('dotenv').config",{"_index":499,"title":{},"body":{"classes/ConfigService.html":{}}}],["reset",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["reverte",{"_index":421,"title":{},"body":{"injectables/BooksService.html":{}}}],["reyes",{"_index":446,"title":{},"body":{"injectables/BooksService.html":{}}}],["rimraf",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":627,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["santillana",{"_index":180,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["santillana'})@column",{"_index":200,"title":{},"body":{"classes/Book-1.html":{}}}],["scalable",{"_index":613,"title":{},"body":{"index.html":{}}}],["scope",{"_index":551,"title":{},"body":{"injectables/MyLogger.html":{}}}],["scope.transient",{"_index":552,"title":{},"body":{"injectables/MyLogger.html":{}}}],["secretorkey",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ser",{"_index":435,"title":{},"body":{"injectables/BooksService.html":{}}}],["server",{"_index":614,"title":{},"body":{"index.html":{}}}],["service",{"_index":313,"title":{},"body":{"controllers/BooksController.html":{}}}],["servicio",{"_index":321,"title":{},"body":{"controllers/BooksController.html":{}}}],["session",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":615,"title":{},"body":{"index.html":{}}}],["siempre",{"_index":386,"title":{},"body":{"injectables/BooksService.html":{}}}],["siglos",{"_index":392,"title":{},"body":{"injectables/BooksService.html":{}}}],["sobre",{"_index":267,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"index.html":{}}}],["sponsors",{"_index":644,"title":{},"body":{"index.html":{}}}],["src/.../config.service.ts",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":605,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.logger.ts",{"_index":31,"title":{},"body":{"classes/AppLogger.html":{},"coverage.html":{}}}],["src/app.logger.ts:11",{"_index":57,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/app.logger.ts:42",{"_index":53,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/app.logger.ts:47",{"_index":61,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/app.logger.ts:51",{"_index":59,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/app.logger.ts:7",{"_index":43,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/app.module.ts",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["src/books/book.class.ts",{"_index":147,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/books/book.class.ts:10",{"_index":172,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:15",{"_index":170,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:18",{"_index":160,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:21",{"_index":181,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:24",{"_index":179,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:27",{"_index":177,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:4",{"_index":175,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:7",{"_index":182,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.dto.ts",{"_index":209,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/books/book.dto.ts:13",{"_index":211,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:16",{"_index":210,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:19",{"_index":215,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:22",{"_index":214,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:25",{"_index":213,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:5",{"_index":216,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:8",{"_index":212,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.entity.ts",{"_index":187,"title":{},"body":{"classes/Book-1.html":{},"coverage.html":{}}}],["src/books/book.entity.ts:12",{"_index":203,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:16",{"_index":193,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:22",{"_index":191,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:26",{"_index":189,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:30",{"_index":201,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:34",{"_index":199,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:38",{"_index":197,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:8",{"_index":195,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/books.controller.ts",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:113",{"_index":268,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:141",{"_index":240,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:164",{"_index":250,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:191",{"_index":274,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:87",{"_index":259,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.module.ts",{"_index":353,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":359,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:34",{"_index":363,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:40",{"_index":370,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:44",{"_index":373,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:48",{"_index":366,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:52",{"_index":368,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:63",{"_index":375,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:9",{"_index":460,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/config/config/config.service.ts",{"_index":481,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config/config.service.ts:17",{"_index":491,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:22",{"_index":493,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:5",{"_index":488,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:8",{"_index":497,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/main.ts",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utilities/auth.module.ts",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/utilities/jwt.strategy.ts",{"_index":530,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/utilities/jwt.strategy.ts:14",{"_index":534,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utilities/jwt.strategy.ts:6",{"_index":532,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utilities/my",{"_index":549,"title":{},"body":{"injectables/MyLogger.html":{},"modules/MyLoggerModule.html":{},"coverage.html":{}}}],["stack",{"_index":308,"title":{},"body":{"controllers/BooksController.html":{}}}],["start",{"_index":318,"title":{},"body":{"controllers/BooksController.html":{},"index.html":{}}}],["start:dev",{"_index":630,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":631,"title":{},"body":{"index.html":{}}}],["started",{"_index":607,"title":{"index.html":{}},"body":{}}],["starter",{"_index":621,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":328,"title":{},"body":{"controllers/BooksController.html":{}}}],["statements",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":325,"title":{},"body":{"controllers/BooksController.html":{}}}],["stay",{"_index":654,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/AppLogger.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["summary",{"_index":324,"title":{},"body":{"controllers/BooksController.html":{}}}],["super",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":645,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suyas",{"_index":399,"title":{},"body":{"injectables/BooksService.html":{}}}],["svg",{"_index":664,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":523,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":634,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":637,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":636,"title":{},"body":{"index.html":{}}}],["tests",{"_index":633,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":643,"title":{},"body":{"index.html":{}}}],["thelogger",{"_index":300,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.booksrepository",{"_index":469,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.delete",{"_index":474,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":466,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone",{"_index":467,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone(bookid",{"_index":477,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(newbook",{"_index":468,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(updated",{"_index":480,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.createbook(newbook",{"_index":344,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebook(bookid",{"_index":346,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall(request.query",{"_index":331,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findbook(bookid",{"_index":340,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebook(bookid",{"_index":348,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.env[key",{"_index":503,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_database",{"_index":520,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_host",{"_index":512,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_password",{"_index":518,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_user",{"_index":516,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":509,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.initializelogger(label",{"_index":64,"title":{},"body":{"classes/AppLogger.html":{}}}],["this.logger",{"_index":65,"title":{},"body":{"classes/AppLogger.html":{}}}],["this.logger.add",{"_index":86,"title":{},"body":{"classes/AppLogger.html":{}}}],["this.logger.error(message",{"_index":91,"title":{},"body":{"classes/AppLogger.html":{}}}],["this.logger.log",{"_index":334,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.logger.log('error",{"_index":89,"title":{},"body":{"classes/AppLogger.html":{}}}],["this.logger.log('info",{"_index":93,"title":{},"body":{"classes/AppLogger.html":{}}}],["this.logger.log('warn",{"_index":92,"title":{},"body":{"classes/AppLogger.html":{}}}],["throw",{"_index":504,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["throwonmissing",{"_index":496,"title":{},"body":{"classes/ConfigService.html":{}}}],["tiempos",{"_index":408,"title":{},"body":{"injectables/BooksService.html":{}}}],["title",{"_index":155,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["token",{"_index":299,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":655,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":476,"title":{},"body":{"injectables/BooksService.html":{}}}],["trace",{"_index":52,"title":{},"body":{"classes/AppLogger.html":{}}}],["transports",{"_index":71,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["transports.file",{"_index":320,"title":{},"body":{"controllers/BooksController.html":{}}}],["través",{"_index":390,"title":{},"body":{"injectables/BooksService.html":{}}}],["true",{"_index":309,"title":{},"body":{"controllers/BooksController.html":{},"classes/ConfigService.html":{}}}],["tutorial_database",{"_index":529,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_host",{"_index":525,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_password",{"_index":528,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_port",{"_index":526,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_user",{"_index":527,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":660,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AppLogger.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["typeorm",{"_index":207,"title":{},"body":{"classes/Book-1.html":{},"injectables/BooksService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([book",{"_index":358,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forroot(configservice.gettypeormconfig",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":494,"title":{},"body":{"classes/ConfigService.html":{}}}],["typescript",{"_index":620,"title":{},"body":{"index.html":{}}}],["ui",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":231,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["una",{"_index":263,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["undefined",{"_index":501,"title":{},"body":{"classes/ConfigService.html":{}}}],["unit",{"_index":632,"title":{},"body":{"index.html":{}}}],["updatebook",{"_index":225,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebook(bookid",{"_index":374,"title":{},"body":{"injectables/BooksService.html":{}}}],["updatebook(request",{"_index":270,"title":{},"body":{"controllers/BooksController.html":{}}}],["updated",{"_index":478,"title":{},"body":{"injectables/BooksService.html":{}}}],["url",{"_index":335,"title":{},"body":{"controllers/BooksController.html":{}}}],["url:/${bookid",{"_index":341,"title":{},"body":{"controllers/BooksController.html":{}}}],["usefactory",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":282,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards(authguard('jwt",{"_index":297,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["user:${request['user'].username",{"_index":336,"title":{},"body":{"controllers/BooksController.html":{}}}],["username",{"_index":515,"title":{},"body":{"classes/ConfigService.html":{}}}],["utilities/auth.module",{"_index":357,"title":{},"body":{"modules/BooksModule.html":{}}}],["utilities/my",{"_index":355,"title":{},"body":{"modules/BooksModule.html":{}}}],["validate",{"_index":531,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":533,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":377,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":669,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veraz",{"_index":436,"title":{},"body":{"injectables/BooksService.html":{}}}],["void",{"_index":55,"title":{},"body":{"classes/AppLogger.html":{}}}],["warn",{"_index":40,"title":{},"body":{"classes/AppLogger.html":{}}}],["warn(message",{"_index":60,"title":{},"body":{"classes/AppLogger.html":{}}}],["watch",{"_index":628,"title":{},"body":{"index.html":{}}}],["website",{"_index":658,"title":{},"body":{"index.html":{}}}],["whereinids(bookid",{"_index":472,"title":{},"body":{"injectables/BooksService.html":{}}}],["winston",{"_index":63,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":66,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["winston.format.combine",{"_index":301,"title":{},"body":{"controllers/BooksController.html":{}}}],["winston.format.json",{"_index":70,"title":{},"body":{"classes/AppLogger.html":{}}}],["winston.format.simple",{"_index":88,"title":{},"body":{"classes/AppLogger.html":{}}}],["winston.format.timestamp",{"_index":302,"title":{},"body":{"controllers/BooksController.html":{}}}],["winston.logger",{"_index":50,"title":{},"body":{"classes/AppLogger.html":{}}}],["winston.transports.console",{"_index":87,"title":{},"body":{"classes/AppLogger.html":{},"controllers/BooksController.html":{}}}],["winston.transports.file",{"_index":73,"title":{},"body":{"classes/AppLogger.html":{}}}],["winston_module_nest_provider",{"_index":293,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonlogger",{"_index":323,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forrootasync",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":314,"title":{},"body":{"controllers/BooksController.html":{}}}],["www.imagen.com/quijote.png",{"_index":176,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["www.imagen.com/quijote.png'})@column",{"_index":196,"title":{},"body":{"classes/Book-1.html":{}}}],["y",{"_index":402,"title":{},"body":{"injectables/BooksService.html":{}}}],["yes",{"_index":49,"title":{},"body":{"classes/AppLogger.html":{}}}],["you'd",{"_index":648,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":303,"title":{},"body":{"controllers/BooksController.html":{}}}],["zoom",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules/MyLoggerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppLogger.html":{"url":"classes/AppLogger.html","title":"class - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.logger.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                initializeLogger\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app.logger.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     winston.Logger\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app.logger.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.logger.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeLogger\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeLogger(label?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.logger.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.logger.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.logger.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as path from 'path';\nimport { LoggerService } from '@nestjs/common';\nimport * as winston from 'winston';\n\nexport class AppLogger implements LoggerService {\n  private logger: winston.Logger;\n  constructor(label?: string) {\n    this.initializeLogger(label);\n  }\n  initializeLogger(label?: string) {\n    this.logger = winston.createLogger({\n      level: 'info',\n      //level: config.logger.level,\n      format: winston.format.json(),\n      transports: [\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/debug/'),\n          filename: 'debug.log',\n          level: 'debug',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/error/'),\n          filename: 'error.log',\n          level: 'error',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/info/'),\n          filename: 'info.log',\n          level: 'info',\n        }),\n      ],\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.add(\n        new winston.transports.Console({\n          format: winston.format.simple(),\n        }),\n      );\n    }\n  }\n  error(message: string, trace: string) {\n    this.logger.log('error', 'MyLogger error - ' + message);\n    this.logger.error(message, trace);\n  }\n\n  warn(message: string) {\n    this.logger.log('warn', 'MyLogger error - ' + message);\n  }\n\n  log(message: string) {\n    this.logger.log('info', message);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BooksModule } from './books/books.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { configService } from './config/config/config.service';\nimport { WinstonModule } from 'nest-winston';\n@Module({\n  imports: [\n    BooksModule,\n    TypeOrmModule.forRoot(configService.getTypeOrmConfig()),\n    WinstonModule.forRootAsync({\n      useFactory: () => ({\n        // options\n      }),\n      inject: [],\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n  imports: [\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n  ],\n  controllers: [],\n  providers: [JwtStrategy],\n  exports: [PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Miguel de Cervantes'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Novela'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 592})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Santillana'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Don Quijote de la Mancha'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class Book {\n  @ApiProperty({ example: 99 })\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  image_url: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book-1.html":{"url":"classes/Book-1.html","title":"class - Book-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Miguel de Cervantes'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})@Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Novela'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 99})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'www.imagen.com/quijote.png'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 592})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Santillana'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Don Quijote de la Mancha'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Book {\n  @ApiProperty({ example: 99 })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  @Column()\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  @Column()\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  @Column('text')\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  @Column()\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  @Column()\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  @Column()\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  @Column()\n  image_url: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Miguel de Cervantes'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Novela'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 592})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Santillana'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Don Quijote de la Mancha'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class BookDto {\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  readonly title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  readonly genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  readonly author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  readonly publisher: string;\n\n  @ApiProperty({ example: 592 })\n  readonly pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  readonly image_url: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                deleteBook\n                            \n                            \n                                findAll\n                            \n                            \n                                findBook\n                            \n                            \n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBook\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBook(request: Request, newBook: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear un libro'})@ApiResponse({status: 201, description: 'Datos del libro creado', type: Book})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Libro a crear\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Devuelve el libro creado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBook\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBook(request: Request, bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')@ApiOperation({summary: 'Eliminar un libro específico'})@ApiResponse({status: 201, description: 'Datos del libro eliminado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Eliminar un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtener lista de libros'})@ApiResponse({status: 201, description: 'Lista de libros', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Lista de parámetros para filtrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Devuelve una lista de libros\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBook\n                        \n                        \n                    \n                \n            \n            \n                \nfindBook(request: Request, bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')@ApiOperation({summary: 'Devuelve información sobre un libro específico'})@ApiResponse({status: 201, description: 'Datos del libro'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a buscar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Devuelve un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBook\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBook(request: Request, bookId: string, newBook: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')@ApiOperation({summary: 'Actualizar un libro específico'})@ApiResponse({status: 201, description: 'Datos del libro actualizado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a modificar\n\n                                    \n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Libro actualizado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Modificar un libro específico\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Req,\n  Post,\n  Body,\n  Delete,\n  Put,\n  Inject,\n  UseGuards,\n} from '@nestjs/common';\nimport { BooksService } from './books.service';\nimport { Request } from 'express';\nimport { BookDto } from './book.dto';\nimport {\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Book } from './book.entity';\nimport { AppLogger } from '../app.logger';\nimport * as winston from 'winston';\nimport { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';\nimport { LoggerService } from '@nestjs/common';\nimport { format, transports } from 'winston';\nimport { AuthGuard } from '@nestjs/passport';\n@ApiTags('book')\n@Controller('books')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class BooksController {\n  private theLogger: AppLogger = new AppLogger();\n\n  logger = winston.createLogger({\n    level: 'info',\n    format: winston.format.combine(\n      winston.format.timestamp({\n        format: 'YYYY-MM-DD HH:mm:ss',\n      }),\n      format.errors({ stack: true }),\n      format.splat(),\n      format.json(),\n    ),\n    defaultMeta: { service: 'BooksService' },\n    transports: [\n      //\n      // - Write to all logs with level `info` and below to `quick-start-combined.log`.\n      // - Write all logs error (and below) to `quick-start-error.log`.\n      //\n      new transports.File({\n        filename: 'quick-start-error.log',\n        level: 'error',\n      }),\n      new transports.File({\n        filename: 'quick-start-info.log',\n        level: 'info',\n      }),\n      new transports.File({ filename: 'quick-start-combined.log' }),\n      new winston.transports.Console(),\n    ],\n  });\n\n  /**\n   *\n   * @param {BooksService} booksService  Servicio de libros\n   */\n  constructor(\n    private booksService: BooksService,\n    @Inject(WINSTON_MODULE_NEST_PROVIDER)\n    private readonly winstonLogger: LoggerService,\n  ) {}\n\n  /**\n   *\n   * @returns {Book[]} Devuelve una lista de libros\n   * @param {Request} request Lista de parámetros para filtrar\n   */\n  @Get()\n  @ApiOperation({ summary: 'Obtener lista de libros' })\n  @ApiResponse({\n    status: 201,\n    description: 'Lista de libros',\n    type: Book,\n  })\n  findAll(@Req() request: Request): Promise {\n    //console.log(request.query);\n    let startTime = Date.now();\n    let data = this.booksService.findAll(request.query);\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n    this.logger.log({\n      level: 'info',\n      //      message: `GET. url:/. user:${request['user'].username}. duration: ${elapsedTime}`,\n      message: `GET. url:/.  duration: ${elapsedTime}`,\n    });\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Devuelve un libro específico\n   * @param {string} bookId  Identificador del libro a buscar\n   */\n\n  @Get(':bookId')\n  @ApiOperation({ summary: 'Devuelve información sobre un libro específico' })\n  @ApiResponse({\n    status: 201,\n    description: 'Datos del libro',\n  })\n  findBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n  ): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.findBook(bookId);\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n    this.logger.log({\n      level: 'info',\n      message: `GET. url:/${bookId}. user:${request['user'].username}. duration: ${elapsedTime}`,\n    });\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Devuelve el libro creado\n   * @param {JSON} newBook  Libro a crear\n   */\n  @Post()\n  @ApiOperation({ summary: 'Crear un libro' })\n  @ApiResponse({\n    status: 201,\n    description: 'Datos del libro creado',\n    type: Book,\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  createBook(@Req() request: Request, @Body() newBook: BookDto): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.createBook(newBook);\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n    this.logger.log({\n      level: 'info',\n      message: `POST. url:/. user:${request['user'].username}. duration: ${elapsedTime}`,\n    });\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Eliminar un libro específico\n   * @param {string} bookId  Identificador del libro a eliminar\n   */\n  @Delete(':bookId')\n  @ApiOperation({ summary: 'Eliminar un libro específico' })\n  @ApiResponse({\n    status: 201,\n    description: 'Datos del libro eliminado',\n  })\n  deleteBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n  ): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.deleteBook(bookId);\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n    this.logger.log({\n      level: 'info',\n      message: `DELETE. url:/${bookId}. user:${request['user'].username}. duration: ${elapsedTime}`,\n    });\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Modificar un libro específico\n   * @param {string} bookId  Identificador del libro a modificar\n   * @param {JSON} newBook Libro actualizado\n   */\n  @Put(':bookId')\n  @ApiOperation({ summary: 'Actualizar un libro específico' })\n  @ApiResponse({\n    status: 201,\n    description: 'Datos del libro actualizado',\n  })\n  updateBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Body() newBook: BookDto,\n  ): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.updateBook(bookId, newBook);\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n    this.logger.log({\n      level: 'info',\n      message: `PUT. url:/${bookId}. user:${request['user'].username}. duration: ${elapsedTime}`,\n    });\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_imports\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nMyLoggerModule\n\nMyLoggerModule\n\nBooksModule -->\n\nMyLoggerModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MyLoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Book } from './book.entity';\nimport { BooksService } from './books.service';\nimport { BooksController } from './books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MyLoggerModule } from '../utilities/my-logger.module';\nimport { AuthModule } from '../utilities/auth.module';\n@Module({\n  imports: [TypeOrmModule.forFeature([Book]), MyLoggerModule, AuthModule],\n  providers: [BooksService],\n  controllers: [BooksController],\n})\nexport class BooksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBook\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBook(newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteBook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateBook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(bookId: string, newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            books\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Book[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      title: 'Una historia de España',\n      genre: 'Historia',\n      description:\n        'Un relato ameno, personal, a ratos irónico, pero siempre único, de nuestra accidentada historia a través de los siglos. Una obra concebida por el autor para, en palabras suyas, «divertirme, releer y disfrutar; un pretexto para mirar atrás desde los tiempos remotos hasta el presente, reflexionar un poco sobre ello y contarlo por escrito de una manera poco ortodoxa.',\n      author: 'Arturo Pérez-Reverte',\n      publisher: 'Alfaguara',\n      pages: 256,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/41%2B-e981m1L._SX311_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Historia de España contada para escépticos',\n      genre: 'Historia',\n      description:\n        'Como escribe el autor, no pretende ser veraz, justa y desapasionada, porque ninguna historia lo es. No está hecha para halagar a reyes y gobernantes, ni pretende halagar a los banqueros, ni a la Conferencia Episcopal, ni al colectivo gay.',\n      author: 'Juan Eslava Galán',\n      publisher: 'Booket',\n      pages: 592,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/51IyZ5Mq8YL._SX326_BO1,204,203,200_.jpg',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/books/books.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { BookDto } from './book.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Book } from './book.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class BooksService {\n  books: Book[] = [\n    {\n      id: 1,\n      title: 'Una historia de España',\n      genre: 'Historia',\n      description:\n        'Un relato ameno, personal, a ratos irónico, pero siempre único, de nuestra accidentada historia a través de los siglos. Una obra concebida por el autor para, en palabras suyas, «divertirme, releer y disfrutar; un pretexto para mirar atrás desde los tiempos remotos hasta el presente, reflexionar un poco sobre ello y contarlo por escrito de una manera poco ortodoxa.',\n      author: 'Arturo Pérez-Reverte',\n      publisher: 'Alfaguara',\n      pages: 256,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/41%2B-e981m1L._SX311_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Historia de España contada para escépticos',\n      genre: 'Historia',\n      description:\n        'Como escribe el autor, no pretende ser veraz, justa y desapasionada, porque ninguna historia lo es. No está hecha para halagar a reyes y gobernantes, ni pretende halagar a los banqueros, ni a la Conferencia Episcopal, ni al colectivo gay.',\n      author: 'Juan Eslava Galán',\n      publisher: 'Booket',\n      pages: 592,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/51IyZ5Mq8YL._SX326_BO1,204,203,200_.jpg',\n    },\n  ];\n\n  constructor(\n    @InjectRepository(Book) private booksRepository: Repository,\n  ) {}\n\n  async findAll(params): Promise {\n    return await this.booksRepository.find();\n  }\n\n  async findBook(bookId: string): Promise {\n    return await this.booksRepository.findOne({ where: { id: bookId } });\n  }\n\n  createBook(newBook: BookDto): Promise {\n    return this.booksRepository.save(newBook);\n  }\n\n  async deleteBook(bookId: string): Promise {\n    /*    return await this.booksRepository\n      .createQueryBuilder()\n      .delete()\n      .from(Book)\n      .whereInIds(bookId)\n      .execute();\n*/\n    return await this.booksRepository.delete({ id: parseInt(bookId) });\n  }\n\n  async updateBook(bookId: string, newBook: BookDto): Promise {\n    let toUpdate = await this.booksRepository.findOne(bookId);\n\n    let updated = Object.assign(toUpdate, newBook);\n\n    return this.booksRepository.save(updated);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/config/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ensureValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTypeOrmConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypeOrmConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nrequire('dotenv').config();\n\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) {}\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'mysql',\n\n      host: this.getValue('TUTORIAL_HOST'),\n      port: parseInt(this.getValue('TUTORIAL_PORT')),\n      username: this.getValue('TUTORIAL_USER'),\n      password: this.getValue('TUTORIAL_PASSWORD'),\n      database: this.getValue('TUTORIAL_DATABASE'),\n\n      entities: ['dist/**/*.entity.js'],\n      synchronize: true,\n    };\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n]);\n\nexport { configService };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utilities/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'MyS3cr3tK3Y',\n    });\n  }\n\n  async validate(payload: any): Promise {\n    if (!payload) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MyLogger.html":{"url":"injectables/MyLogger.html","title":"injectable - MyLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MyLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/my-logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class MyLogger extends Logger {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MyLoggerModule.html":{"url":"modules/MyLoggerModule.html","title":"module - MyLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    MyLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MyLoggerModule\n\n\n\ncluster_MyLoggerModule_exports\n\n\n\ncluster_MyLoggerModule_providers\n\n\n\n\nMyLogger \n\nMyLogger \n\n\n\nMyLoggerModule\n\nMyLoggerModule\n\nMyLogger  -->\n\nMyLoggerModule->MyLogger \n\n\n\n\n\nMyLogger\n\nMyLogger\n\nMyLoggerModule -->\n\nMyLogger->MyLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/my-logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MyLogger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MyLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MyLogger } from './my-logger.service';\n\n@Module({ providers: [MyLogger], exports: [MyLogger] })\nexport class MyLoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.logger.ts\n            \n            class\n            AppLogger\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/books/book.class.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.dto.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/config/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/config/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utilities/my-logger.service.ts\n            \n            injectable\n            MyLogger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            mysql : ^2.18.1\n        \n            nest-winston : ^1.3.6\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n        \n            winston : ^3.3.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MyLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_imports\n\n\n\ncluster_BooksModule_providers\n\n\n\ncluster_MyLoggerModule\n\n\n\ncluster_MyLoggerModule_exports\n\n\n\ncluster_MyLoggerModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nMyLoggerModule\n\nMyLoggerModule\n\nBooksModule -->\n\nMyLoggerModule->BooksModule\n\n\n\n\n\nMyLogger \n\nMyLogger \n\nMyLogger  -->\n\nMyLoggerModule->MyLogger \n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\nMyLogger\n\nMyLogger\n\nMyLoggerModule -->\n\nMyLogger->MyLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config/config.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
