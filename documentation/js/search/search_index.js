var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.355,1,1.566]],["body/controllers/AppController.html",[0,2.175,1,2.514,2,1.535,3,0.642,4,0.537,5,0.537,6,2.839,7,0.642,8,1.894,9,3.968,10,1.763,11,0.053,12,1.017,13,3.537,14,1.535,15,1.442,16,0.792,17,1.017,18,2.054,19,2.839,20,0.642,21,0.182,22,2.839,23,2.38,24,1.535,25,3.537,26,0.035,27,0.043,28,0.035]],["title/modules/AppModule.html",[29,1.03,30,1.566]],["body/modules/AppModule.html",[1,2.303,2,1.51,3,0.726,4,0.38,5,0.38,11,0.054,16,0.906,17,0.72,18,2.039,19,2.011,20,0.454,21,0.129,26,0.024,27,0.034,28,0.024,29,1.514,30,2.83,31,1.087,32,1.087,33,1.442,34,1.442,35,1.087,36,2.303,37,1.442,38,2.011,39,2.011,40,2.011,41,2.342,42,2.004,43,1.442,44,1.442,45,2.505,46,2.342,47,2.505,48,2.505,49,2.011,50,1.248,51,1.248,52,2.505,53,2.505,54,1.442,55,2.691,56,3.48,57,2.505,58,2.505,59,3.645,60,3.48,61,2.505,62,2.505,63,2.505,64,2.505,65,2.505,66,2.505,67,2.505,68,2.505,69,2.011,70,2.505,71,2.505,72,2.505,73,2.154,74,3.999,75,3.999,76,3.999,77,2.505,78,3.999,79,2.505,80,3.48,81,2.505,82,2.505,83,2.011,84,2.505,85,2.505,86,2.505]],["title/injectables/AppService.html",[18,1.18,87,1.03]],["body/injectables/AppService.html",[3,0.669,4,0.56,5,0.56,7,0.669,8,1.943,9,4.026,11,0.053,12,1.06,14,1.6,15,1.479,16,0.669,17,1.06,18,1.943,20,0.669,21,0.19,24,1.6,26,0.036,27,0.044,28,0.036,87,1.696,88,2.124,89,2.96,90,3.688,91,3.688,92,3.688]],["title/modules/AuthModule.html",[29,1.03,93,1.355]],["body/modules/AuthModule.html",[2,1.424,3,0.595,4,0.498,5,0.498,11,0.053,16,0.83,17,0.943,20,0.595,21,0.169,26,0.032,27,0.041,28,0.032,29,1.732,31,1.424,32,1.424,33,1.89,34,1.89,35,1.424,36,2.635,37,2.398,42,2.398,43,1.89,44,1.89,46,2.208,93,2.53,94,2.634,95,2.634,96,2.53,97,3.281,98,4.164,99,1.89,100,3.281,101,3.281,102,3.281,103,2.208,104,3.281,105,2.634,106,3.281,107,3.281]],["title/classes/Book.html",[21,0.14,108,0.898]],["body/classes/Book.html",[3,0.421,4,0.352,5,0.352,7,0.421,10,2.403,11,0.053,12,1.386,15,1.679,16,0.421,20,0.421,21,0.12,26,0.023,27,0.032,28,0.023,108,1.09,109,1.157,110,1.864,111,1.9,112,1.913,113,1.665,114,2.21,115,2.582,116,2.21,117,2.21,118,2.21,119,2.21,120,1.593,121,3.245,122,2.22,123,2.286,124,2.22,125,2.321,126,2.22,127,2.22,128,1.9,129,2.22,130,2.22,131,2.812,132,2.812,133,2.406,134,2.812,135,2.321,136,2.22,137,2.321,138,2.406,139,2.648,140,2.321,141,2.22,142,2.321,143,1.9,144,2.321,145,2.22,146,2.321,147,2.321,148,3.301,149,1.157,150,3.245]],["title/classes/Book-1.html",[21,0.118,108,0.755,151,1.835]],["body/classes/Book-1.html",[3,0.405,4,0.339,5,0.339,7,0.405,10,2.379,11,0.053,12,1.372,15,1.667,16,0.582,20,0.405,21,0.115,26,0.022,27,0.031,28,0.022,108,1.06,109,1.114,111,1.849,112,1.872,113,1.63,114,2.163,115,2.528,116,2.163,117,2.163,118,2.163,119,2.163,120,1.577,121,3.212,122,2.16,123,2.257,124,1.503,126,2.16,127,2.16,128,1.849,129,2.16,130,2.16,131,2.763,132,2.763,133,2.365,134,2.528,136,1.503,138,2.365,139,1.794,141,1.503,143,1.287,145,1.503,148,3.271,149,1.114,150,3.212,152,1.794,153,2.234,154,2.234,155,3.21,156,2.234,157,2.234,158,2.234,159,2.234,160,2.234,161,2.234,162,2.234,163,2.234,164,2.234,165,2.234,166,2.234,167,2.234,168,2.234,169,3.21,170,4.665,171,3.21,172,1.503]],["title/classes/BookDto.html",[21,0.14,173,1.355]],["body/classes/BookDto.html",[3,0.417,4,0.349,5,0.349,7,0.417,10,2.345,11,0.053,12,1.352,15,1.676,16,0.417,20,0.417,21,0.119,23,3.582,26,0.022,27,0.032,28,0.022,109,1.146,111,1.887,112,1.902,113,1.656,114,2.198,116,2.198,117,2.198,118,2.198,119,2.198,120,1.554,121,3.166,122,2.205,123,2.279,124,2.205,126,2.205,127,2.205,128,1.887,129,2.205,130,2.205,131,2.8,132,2.8,133,2.396,134,2.8,136,2.205,138,1.887,141,2.205,143,1.887,145,2.205,148,3.236,149,1.146,150,3.166,173,1.633,174,1.846,175,2.299,176,2.299,177,2.299,178,2.299,179,2.299,180,2.299,181,2.299]],["title/controllers/BooksController.html",[0,1.355,182,1.566]],["body/controllers/BooksController.html",[0,0.536,2,0.466,3,0.328,4,0.163,5,0.163,7,0.195,8,0.785,10,1.527,11,0.054,12,0.954,14,1.777,15,1.386,16,0.7,17,0.309,20,0.195,21,0.055,23,0.723,24,1.329,26,0.011,27,0.018,28,0.011,54,0.619,55,1.217,59,0.863,99,0.619,105,0.863,108,1.274,113,1.973,120,1.316,123,1.922,128,2.51,138,1.348,149,0.536,173,1.759,182,1.041,183,0.863,184,1.075,185,0.863,186,1.452,187,1.879,188,1.452,189,1.879,190,1.879,191,1.808,192,1.075,193,5.09,194,3.095,195,1.075,196,2.745,197,3.499,198,1.075,199,3.529,200,3.706,201,5.041,202,2.745,203,1.075,204,1.808,205,1.808,206,1.075,207,1.911,208,1.911,209,1.911,210,2.681,211,3.706,212,1.452,213,1.075,214,3.367,215,1.075,216,3.319,217,2.341,218,3.706,219,1.808,220,1.075,221,3.319,222,3.855,223,1.075,224,1.075,225,1.808,226,3.706,227,1.075,228,3.319,229,1.075,230,1.808,231,1.452,232,1.808,233,1.452,234,1.075,235,1.075,236,1.808,237,1.452,238,1.075,239,1.808,240,1.075,241,1.075,242,1.808,243,2.745,244,1.075,245,2.745,246,1.808,247,3.063,248,1.075,249,3.529,250,1.075,251,3.706,252,2.745,253,1.808,254,2.341,255,0.863,256,1.075,257,1.075,258,1.075,259,1.329,260,0.863,261,0.863,262,0.863,263,3.319,264,3.529,265,1.075,266,1.075,267,0.723,268,1.075,269,1.075,270,2.341,271,1.075,272,1.075,273,1.075,274,1.075,275,0.863,276,1.075,277,0.619,278,1.217,279,1.075,280,3.063,281,3.319,282,1.075,283,3.319,284,3.984,285,1.075,286,3.063,287,1.075,288,2.341,289,1.075,290,1.075,291,1.808,292,1.075,293,1.075,294,1.075,295,1.075,296,1.075,297,1.075,298,1.808,299,1.808,300,1.075,301,1.075,302,1.075,303,1.075,304,1.075,305,1.075,306,1.075,307,1.075]],["title/modules/BooksModule.html",[29,1.03,41,1.355]],["body/modules/BooksModule.html",[2,1.746,3,0.564,4,0.472,5,0.472,11,0.053,16,0.908,17,0.894,20,0.564,21,0.16,26,0.03,27,0.039,28,0.03,29,1.689,31,1.349,32,1.349,33,1.791,34,1.791,35,1.349,36,2.569,37,1.791,41,2.572,42,2.317,43,1.791,44,1.791,46,2.708,49,2.496,50,1.55,93,2.494,108,1.027,182,2.569,259,2.171,260,2.496,267,2.093,308,2.496,309,3.11,310,2.496,311,3.11,312,3.11,313,3.11,314,3.11]],["title/injectables/BooksService.html",[87,1.03,259,1.18]],["body/injectables/BooksService.html",[3,0.23,4,0.192,5,0.192,7,0.23,8,0.9,11,0.053,12,1.092,14,1.455,15,1.356,16,0.609,17,0.364,20,0.23,21,0.065,24,1.562,26,0.012,27,0.02,28,0.012,50,0.632,87,0.785,88,0.73,108,0.869,111,1.194,112,1.516,113,1.32,114,1.751,115,2.423,116,1.751,117,1.751,118,1.751,119,1.751,120,1.19,123,2.105,133,1.194,143,1.194,151,1.665,172,0.853,173,1.894,185,2.113,186,1.665,187,1.665,188,1.665,189,1.665,190,1.665,194,2.693,197,2.891,207,2.074,208,2.074,209,2.074,210,2.841,212,2.891,214,2.441,231,3.184,233,2.891,237,1.665,255,1.018,259,0.9,262,1.018,267,0.853,277,1.194,278,0.853,315,1.018,316,3.543,317,1.268,318,2.441,319,1.268,320,2.074,321,2.074,322,1.268,323,2.074,324,1.268,325,2.074,326,1.268,327,1.268,328,2.074,329,1.268,330,2.074,331,1.268,332,0.853,333,0.853,334,4.413,335,3.041,336,2.074,337,2.074,338,2.074,339,2.074,340,2.074,341,2.074,342,2.074,343,2.074,344,2.074,345,2.074,346,2.074,347,3.601,348,2.074,349,2.074,350,2.074,351,3.041,352,3.041,353,2.074,354,2.074,355,2.074,356,2.074,357,2.074,358,3.966,359,2.074,360,2.074,361,2.074,362,2.074,363,2.074,364,2.074,365,2.074,366,2.074,367,2.074,368,2.074,369,3.041,370,2.074,371,2.074,372,2.074,373,2.074,374,2.074,375,2.074,376,2.074,377,2.074,378,2.074,379,2.074,380,3.041,381,3.041,382,3.041,383,2.074,384,2.074,385,1.665,386,2.074,387,2.074,388,2.074,389,2.074,390,3.041,391,2.074,392,2.074,393,2.074,394,2.074,395,2.074,396,2.074,397,2.074,398,2.074,399,2.074,400,2.074,401,3.041,402,2.074,403,2.074,404,3.601,405,2.074,406,2.074,407,2.074,408,2.074,409,2.074,410,2.074,411,2.074,412,2.074,413,2.074,414,2.074,415,2.074,416,1.268,417,1.018,418,1.018,419,1.268,420,1.268,421,3.354,422,1.268,423,1.268,424,1.268,425,1.268,426,1.268,427,1.268,428,1.268,429,1.268,430,1.268,431,1.268,432,1.268,433,1.268,434,1.268,435,1.268,436,1.268]],["title/classes/ConfigService.html",[21,0.14,51,1.355]],["body/classes/ConfigService.html",[3,0.442,4,0.369,5,0.369,7,0.442,8,1.48,11,0.054,12,1.227,14,1.709,15,1.66,16,0.442,20,0.442,21,0.125,22,1.954,24,1.709,26,0.024,27,0.033,28,0.024,50,1.213,51,2.127,69,3.426,73,1.7,83,1.954,109,1.213,120,1.539,207,2.268,208,2.268,209,2.268,277,1.402,278,2.65,332,1.638,333,2.872,437,1.638,438,4.658,439,3.411,440,4.268,441,3.411,442,2.434,443,3.411,444,2.434,445,3.411,446,3.411,447,2.434,448,2.434,449,2.434,450,3.938,451,3.411,452,4.268,453,2.434,454,2.434,455,2.434,456,2.434,457,2.434,458,3.411,459,2.434,460,1.954,461,2.434,462,2.434,463,2.434,464,2.434,465,2.434,466,1.954,467,2.434,468,2.434,469,2.434,470,2.434,471,2.434,472,2.434,473,2.434,474,2.434,475,2.434,476,2.434,477,2.434,478,2.434,479,2.434,480,1.954,481,1.954,482,1.954,483,1.954,484,1.954,485,1.954]],["title/injectables/JwtStrategy.html",[87,1.03,96,1.355]],["body/injectables/JwtStrategy.html",[3,0.57,4,0.477,5,0.477,7,0.57,8,1.757,11,0.053,12,1.164,14,1.363,16,0.813,17,0.903,20,0.57,21,0.162,24,1.363,26,0.031,27,0.04,28,0.031,73,1.565,87,1.533,88,1.809,96,2.018,99,1.809,103,2.113,120,1.037,207,1.809,208,1.809,209,1.809,210,2.725,275,2.521,277,2.581,316,3.598,417,2.521,418,2.521,460,2.521,486,2.521,487,4.049,488,3.14,489,4.049,490,3.14,491,4.482,492,3.14,493,3.14,494,3.14,495,2.521,496,3.14,497,3.14,498,3.14,499,3.14,500,3.14,501,3.14,502,3.14,503,3.14,504,3.14]],["title/coverage.html",[505,2.478]],["body/coverage.html",[0,2.04,1,1.839,5,0.485,6,2.563,11,0.053,18,1.386,21,0.246,26,0.031,27,0.04,28,0.031,35,1.386,51,2.04,73,1.591,87,1.71,89,2.563,96,1.591,108,1.352,110,2.563,120,1.055,152,2.563,173,1.591,174,2.563,182,1.839,183,2.563,259,1.386,315,2.563,437,2.754,486,2.563,505,2.149,506,3.193,507,3.193,508,3.193,509,5.319,510,4.093,511,4.093,512,4.093,513,3.193,514,3.193,515,3.193,516,4.093,517,2.563,518,3.193,519,3.193,520,3.193,521,3.193]],["title/dependencies.html",[32,1.416,522,2.286]],["body/dependencies.html",[11,0.054,17,0.95,26,0.032,27,0.041,28,0.032,32,1.434,50,1.647,54,1.903,55,2.815,99,1.903,103,2.223,149,1.647,172,2.223,261,3.358,466,2.652,495,3.685,523,4.59,524,3.304,525,3.304,526,4.59,527,3.304,528,3.304,529,3.304,530,3.304,531,3.304,532,3.304,533,3.304,534,3.304,535,3.304,536,3.304,537,3.304,538,3.304,539,3.304,540,3.304,541,3.304,542,3.304,543,3.304,544,3.304,545,3.304,546,3.304,547,3.304,548,3.304]],["title/miscellaneous/functions.html",[549,1.316,550,2.619]],["body/miscellaneous/functions.html",[7,0.747,11,0.047,26,0.04,27,0.047,28,0.04,35,2.192,517,3.306,549,2.372,550,3.306,551,4.118]],["title/index.html",[7,0.415,552,2.286,553,2.286]],["body/index.html",[4,0.454,11,0.053,26,0.029,27,0.038,28,0.029,54,2.522,112,1.491,113,1.298,318,2.402,505,2.014,554,2.992,555,2.992,556,3.924,557,2.992,558,2.992,559,2.992,560,2.992,561,2.992,562,2.992,563,2.992,564,2.992,565,2.992,566,2.992,567,2.992,568,2.992,569,5.047,570,2.992,571,2.992,572,2.992,573,4.952,574,2.992,575,2.992,576,3.924,577,2.992,578,2.992,579,2.992,580,2.992,581,3.924,582,3.924,583,2.992,584,2.992,585,2.992,586,3.924,587,3.924,588,2.992,589,2.992,590,2.992,591,2.992,592,2.992,593,2.402,594,2.992,595,2.992,596,2.992,597,2.992,598,2.992,599,2.992,600,2.992,601,2.992,602,2.992,603,2.992,604,2.992,605,2.992,606,2.992,607,2.992,608,2.992,609,2.992,610,2.992]],["title/modules.html",[31,1.598]],["body/modules.html",[11,0.046,26,0.039,27,0.046,28,0.039,30,2.292,31,1.727,41,1.984,93,1.984,593,3.999,611,4.982,612,4.982,613,4.982]],["title/overview.html",[614,2.956]],["body/overview.html",[2,1.464,11,0.051,18,2.011,26,0.033,27,0.041,28,0.033,29,1.278,30,2.944,31,1.464,32,1.464,33,1.943,34,1.943,35,1.464,36,1.943,37,1.943,38,2.709,39,2.709,40,2.709,41,2.586,42,2.441,43,1.943,44,1.943,88,1.943,93,2.496,94,2.709,95,2.709,96,2.31,109,1.682,259,2.011,308,2.709,310,2.709,385,2.709,614,2.709,615,4.239,616,3.374]],["title/miscellaneous/variables.html",[549,1.316,617,2.619]],["body/miscellaneous/variables.html",[7,0.716,11,0.05,26,0.039,27,0.046,28,0.039,51,2.325,73,1.967,332,2.656,333,2.656,437,2.656,480,3.169,481,3.169,482,3.169,483,3.169,484,3.169,485,3.169,549,2.273,617,3.169,618,3.947]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["0.2.25",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":151,"title":{"classes/Book-1.html":{}},"body":{"injectables/BooksService.html":{}}}],["1.0.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":385,"title":{},"body":{"injectables/BooksService.html":{},"overview.html":{}}}],["2.18.1",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{}}}],["201",{"_index":199,"title":{},"body":{"controllers/BooksController.html":{}}}],["256",{"_index":379,"title":{},"body":{"injectables/BooksService.html":{}}}],["3",{"_index":615,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":616,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":204,"title":{},"body":{"controllers/BooksController.html":{}}}],["592",{"_index":143,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["592})@column",{"_index":163,"title":{},"body":{"classes/Book-1.html":{}}}],["6.5.4",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":139,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{}}}],["99})@primarygeneratedcolumn",{"_index":159,"title":{},"body":{"classes/Book-1.html":{}}}],["accidentada",{"_index":345,"title":{},"body":{"injectables/BooksService.html":{}}}],["actualizado",{"_index":243,"title":{},"body":{"controllers/BooksController.html":{}}}],["actualizar",{"_index":242,"title":{},"body":{"controllers/BooksController.html":{}}}],["al",{"_index":408,"title":{},"body":{"injectables/BooksService.html":{}}}],["alfaguara",{"_index":378,"title":{},"body":{"injectables/BooksService.html":{}}}],["amazing",{"_index":594,"title":{},"body":{"index.html":{}}}],["amazon.com/images/i/41%2b",{"_index":383,"title":{},"body":{"injectables/BooksService.html":{}}}],["amazon.com/images/i/51iyz5mq8yl._sx326_bo1,204,203,200_.jpg",{"_index":415,"title":{},"body":{"injectables/BooksService.html":{}}}],["ameno",{"_index":337,"title":{},"body":{"injectables/BooksService.html":{}}}],["angular",{"_index":565,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":266,"title":{},"body":{"controllers/BooksController.html":{}}}],["apibearerauth('access",{"_index":274,"title":{},"body":{"controllers/BooksController.html":{}}}],["apioperation",{"_index":263,"title":{},"body":{"controllers/BooksController.html":{}}}],["apiproperty",{"_index":148,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["apiproperty({example",{"_index":121,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["apiresponse",{"_index":264,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags",{"_index":265,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags('book",{"_index":271,"title":{},"body":{"controllers/BooksController.html":{}}}],["app",{"_index":571,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":562,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arturo",{"_index":375,"title":{},"body":{"injectables/BooksService.html":{}}}],["async",{"_index":316,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["atrás",{"_index":362,"title":{},"body":{"injectables/BooksService.html":{}}}],["authguard",{"_index":268,"title":{},"body":{"controllers/BooksController.html":{}}}],["authmodule",{"_index":93,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":112,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{},"index.html":{}}}],["autor",{"_index":352,"title":{},"body":{"injectables/BooksService.html":{}}}],["await",{"_index":421,"title":{},"body":{"injectables/BooksService.html":{}}}],["backers",{"_index":595,"title":{},"body":{"index.html":{}}}],["banqueros",{"_index":405,"title":{},"body":{"injectables/BooksService.html":{}}}],["body",{"_index":254,"title":{},"body":{"controllers/BooksController.html":{}}}],["book",{"_index":108,"title":{"classes/Book.html":{},"classes/Book-1.html":{}},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["book.dto",{"_index":262,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["book.entity",{"_index":267,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["bookdto",{"_index":173,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["booket",{"_index":414,"title":{},"body":{"injectables/BooksService.html":{}}}],["bookid",{"_index":214,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books",{"_index":185,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books.controller",{"_index":312,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":260,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":182,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["booksmodule",{"_index":41,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":320,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":259,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["book})@apiresponse({status",{"_index":203,"title":{},"body":{"controllers/BooksController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":613,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":611,"title":{},"body":{"modules.html":{}}}],["building",{"_index":557,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":239,"title":{},"body":{"controllers/BooksController.html":{}}}],["cervantes",{"_index":124,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["cervantes'})@column",{"_index":153,"title":{},"body":{"classes/Book-1.html":{}}}],["class",{"_index":21,"title":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["classes",{"_index":109,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":308,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_imports",{"_index":309,"title":{},"body":{"modules/BooksModule.html":{}}}],["cluster_booksmodule_providers",{"_index":310,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["colectivo",{"_index":409,"title":{},"body":{"injectables/BooksService.html":{}}}],["column",{"_index":170,"title":{},"body":{"classes/Book-1.html":{}}}],["column('text",{"_index":155,"title":{},"body":{"classes/Book-1.html":{}}}],["como",{"_index":388,"title":{},"body":{"injectables/BooksService.html":{}}}],["concebida",{"_index":350,"title":{},"body":{"injectables/BooksService.html":{}}}],["conferencia",{"_index":406,"title":{},"body":{"injectables/BooksService.html":{}}}],["config/config/config.service",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":51,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env).ensurevalues",{"_index":480,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(request",{"_index":289,"title":{},"body":{"controllers/BooksController.html":{}}}],["const",{"_index":458,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor",{"_index":277,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(booksrepository",{"_index":317,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(env",{"_index":442,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{}}}],["contada",{"_index":386,"title":{},"body":{"injectables/BooksService.html":{}}}],["contarlo",{"_index":371,"title":{},"body":{"injectables/BooksService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"coverage.html":{}}}],["controller('books",{"_index":272,"title":{},"body":{"controllers/BooksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["coverage",{"_index":505,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":202,"title":{},"body":{"controllers/BooksController.html":{}}}],["crear",{"_index":196,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook",{"_index":186,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["createbook(@req",{"_index":292,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook(newbook",{"_index":321,"title":{},"body":{"injectables/BooksService.html":{}}}],["createbook(request",{"_index":192,"title":{},"body":{"controllers/BooksController.html":{}}}],["createquerybuilder",{"_index":426,"title":{},"body":{"injectables/BooksService.html":{}}}],["data",{"_index":284,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":475,"title":{},"body":{"classes/ConfigService.html":{}}}],["date.now",{"_index":283,"title":{},"body":{"controllers/BooksController.html":{}}}],["datos",{"_index":200,"title":{},"body":{"controllers/BooksController.html":{}}}],["dd",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":123,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["debug",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["debug.log",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["default",{"_index":332,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["del",{"_index":128,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["delete",{"_index":255,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["delete(':bookid",{"_index":294,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid')@apioperation({summary",{"_index":215,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebook",{"_index":187,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebook(bookid",{"_index":323,"title":{},"body":{"injectables/BooksService.html":{}}}],["deletebook(request",{"_index":213,"title":{},"body":{"controllers/BooksController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desapasionada",{"_index":394,"title":{},"body":{"injectables/BooksService.html":{}}}],["description",{"_index":113,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"index.html":{}}}],["desde",{"_index":363,"title":{},"body":{"injectables/BooksService.html":{}}}],["development",{"_index":572,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":211,"title":{},"body":{"controllers/BooksController.html":{}}}],["dirname",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["disfrutar",{"_index":359,"title":{},"body":{"injectables/BooksService.html":{}}}],["dist/**/*.entity.js",{"_index":478,"title":{},"body":{"classes/ConfigService.html":{}}}],["divertirme",{"_index":356,"title":{},"body":{"injectables/BooksService.html":{}}}],["documentation",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["don",{"_index":131,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["duration",{"_index":307,"title":{},"body":{"controllers/BooksController.html":{}}}],["e2e",{"_index":583,"title":{},"body":{"index.html":{}}}],["e981m1l._sx311_bo1,204,203,200_.jpg",{"_index":384,"title":{},"body":{"injectables/BooksService.html":{}}}],["edición",{"_index":127,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["efficient",{"_index":558,"title":{},"body":{"index.html":{}}}],["el",{"_index":212,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["elapsedtime",{"_index":299,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminado",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminar",{"_index":216,"title":{},"body":{"controllers/BooksController.html":{}}}],["ello",{"_index":370,"title":{},"body":{"injectables/BooksService.html":{}}}],["en",{"_index":353,"title":{},"body":{"injectables/BooksService.html":{}}}],["ensurevalues",{"_index":439,"title":{},"body":{"classes/ConfigService.html":{}}}],["ensurevalues(keys",{"_index":446,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":477,"title":{},"body":{"classes/ConfigService.html":{}}}],["entity",{"_index":169,"title":{},"body":{"classes/Book-1.html":{}}}],["env",{"_index":445,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":463,"title":{},"body":{"classes/ConfigService.html":{}}}],["episcopal",{"_index":407,"title":{},"body":{"injectables/BooksService.html":{}}}],["error",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["error(`config",{"_index":461,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.log",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["es",{"_index":398,"title":{},"body":{"injectables/BooksService.html":{}}}],["escribe",{"_index":389,"title":{},"body":{"injectables/BooksService.html":{}}}],["escrito",{"_index":372,"title":{},"body":{"injectables/BooksService.html":{}}}],["escépticos",{"_index":387,"title":{},"body":{"injectables/BooksService.html":{}}}],["eslava",{"_index":412,"title":{},"body":{"injectables/BooksService.html":{}}}],["españa",{"_index":335,"title":{},"body":{"injectables/BooksService.html":{}}}],["específico",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{}}}],["específico'})@apiresponse({status",{"_index":217,"title":{},"body":{"controllers/BooksController.html":{}}}],["est",{"_index":399,"title":{},"body":{"injectables/BooksService.html":{}}}],["esta",{"_index":126,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["example",{"_index":150,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["execute",{"_index":429,"title":{},"body":{"injectables/BooksService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["express",{"_index":261,"title":{},"body":{"controllers/BooksController.html":{},"dependencies.html":{}}}],["extends",{"_index":496,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":493,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":500,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["filename",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["filtrar",{"_index":232,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall",{"_index":188,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findall(@req",{"_index":282,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall(params",{"_index":325,"title":{},"body":{"injectables/BooksService.html":{}}}],["findall(request",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{}}}],["findbook",{"_index":189,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findbook(bookid",{"_index":328,"title":{},"body":{"injectables/BooksService.html":{}}}],["findbook(request",{"_index":234,"title":{},"body":{"controllers/BooksController.html":{}}}],["finishtime",{"_index":298,"title":{},"body":{"controllers/BooksController.html":{}}}],["forbidden",{"_index":205,"title":{},"body":{"controllers/BooksController.html":{}}}],["format",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":556,"title":{},"body":{"index.html":{}}}],["from(book",{"_index":427,"title":{},"body":{"injectables/BooksService.html":{}}}],["function",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":550,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["galán",{"_index":413,"title":{},"body":{"injectables/BooksService.html":{}}}],["gay",{"_index":410,"title":{},"body":{"injectables/BooksService.html":{}}}],["genre",{"_index":114,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["get(':bookid",{"_index":287,"title":{},"body":{"controllers/BooksController.html":{}}}],["get(':bookid')@apioperation({summary",{"_index":235,"title":{},"body":{"controllers/BooksController.html":{}}}],["get()@apioperation({summary",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":552,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":440,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":441,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":451,"title":{},"body":{"classes/ConfigService.html":{}}}],["gobernantes",{"_index":403,"title":{},"body":{"injectables/BooksService.html":{}}}],["grow",{"_index":590,"title":{},"body":{"index.html":{}}}],["halagar",{"_index":401,"title":{},"body":{"injectables/BooksService.html":{}}}],["hasta",{"_index":366,"title":{},"body":{"injectables/BooksService.html":{}}}],["heavily",{"_index":563,"title":{},"body":{"index.html":{}}}],["hecha",{"_index":400,"title":{},"body":{"injectables/BooksService.html":{}}}],["hello",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":601,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["hidalgo",{"_index":130,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["historia",{"_index":334,"title":{},"body":{"injectables/BooksService.html":{}}}],["host",{"_index":467,"title":{},"body":{"classes/ConfigService.html":{}}}],["httpexception",{"_index":418,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":503,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://images",{"_index":380,"title":{},"body":{"injectables/BooksService.html":{}}}],["https://nestjs.com",{"_index":607,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":417,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpstatus.unauthorized",{"_index":504,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":115,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"injectables/BooksService.html":{}}}],["identificador",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{}}}],["identifier",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":116,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["images",{"_index":382,"title":{},"body":{"injectables/BooksService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["info.log",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["información",{"_index":236,"title":{},"body":{"controllers/BooksController.html":{}}}],["ingenioso",{"_index":129,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["inject",{"_index":257,"title":{},"body":{"controllers/BooksController.html":{}}}],["inject(winston_module_provider",{"_index":279,"title":{},"body":{"controllers/BooksController.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":419,"title":{},"body":{"injectables/BooksService.html":{}}}],["injectrepository(book",{"_index":420,"title":{},"body":{"injectables/BooksService.html":{}}}],["inspired",{"_index":564,"title":{},"body":{"index.html":{}}}],["installation",{"_index":568,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":570,"title":{},"body":{"index.html":{}}}],["irónico",{"_index":340,"title":{},"body":{"injectables/BooksService.html":{}}}],["join",{"_index":597,"title":{},"body":{"index.html":{}}}],["json",{"_index":291,"title":{},"body":{"controllers/BooksController.html":{}}}],["juan",{"_index":411,"title":{},"body":{"injectables/BooksService.html":{}}}],["justa",{"_index":393,"title":{},"body":{"injectables/BooksService.html":{}}}],["jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":96,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":456,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":604,"title":{},"body":{"index.html":{}}}],["key",{"_index":454,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":448,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":464,"title":{},"body":{"classes/ConfigService.html":{}}}],["la",{"_index":133,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["level",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{}}}],["libro",{"_index":201,"title":{},"body":{"controllers/BooksController.html":{}}}],["libro'})@apiresponse({status",{"_index":198,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros",{"_index":228,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros'})@apiresponse({status",{"_index":227,"title":{},"body":{"controllers/BooksController.html":{}}}],["license",{"_index":610,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":587,"title":{},"body":{"index.html":{}}}],["lista",{"_index":226,"title":{},"body":{"controllers/BooksController.html":{}}}],["literal",{"_index":443,"title":{},"body":{"classes/ConfigService.html":{}}}],["lo",{"_index":397,"title":{},"body":{"injectables/BooksService.html":{}}}],["local",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["log/debug",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["log/error",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["log/info",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":270,"title":{},"body":{"controllers/BooksController.html":{}}}],["los",{"_index":347,"title":{},"body":{"injectables/BooksService.html":{}}}],["mancha",{"_index":134,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["mancha'})@column",{"_index":167,"title":{},"body":{"classes/Book-1.html":{}}}],["manera",{"_index":373,"title":{},"body":{"injectables/BooksService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":301,"title":{},"body":{"controllers/BooksController.html":{}}}],["metadata",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":302,"title":{},"body":{"controllers/BooksController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["miguel",{"_index":122,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["mirar",{"_index":361,"title":{},"body":{"injectables/BooksService.html":{}}}],["miscellaneous",{"_index":549,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":462,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":586,"title":{},"body":{"index.html":{}}}],["mm",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":576,"title":{},"body":{"index.html":{}}}],["modificar",{"_index":245,"title":{},"body":{"controllers/BooksController.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":600,"title":{},"body":{"index.html":{}}}],["mys3cr3tk3y",{"_index":502,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["mysql",{"_index":466,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":605,"title":{},"body":{"index.html":{}}}],["na.ssl",{"_index":381,"title":{},"body":{"injectables/BooksService.html":{}}}],["name",{"_index":208,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":609,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":149,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["new",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbook",{"_index":194,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["ni",{"_index":404,"title":{},"body":{"injectables/BooksService.html":{}}}],["nico",{"_index":343,"title":{},"body":{"injectables/BooksService.html":{}}}],["ninguna",{"_index":396,"title":{},"body":{"injectables/BooksService.html":{}}}],["node.js",{"_index":555,"title":{},"body":{"index.html":{}}}],["novela",{"_index":136,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["novela'})@column",{"_index":157,"title":{},"body":{"classes/Book-1.html":{}}}],["npm",{"_index":569,"title":{},"body":{"index.html":{}}}],["nuestra",{"_index":344,"title":{},"body":{"injectables/BooksService.html":{}}}],["number",{"_index":138,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["object.assign(toupdate",{"_index":435,"title":{},"body":{"injectables/BooksService.html":{}}}],["obra",{"_index":349,"title":{},"body":{"injectables/BooksService.html":{}}}],["obtener",{"_index":225,"title":{},"body":{"controllers/BooksController.html":{}}}],["open",{"_index":588,"title":{},"body":{"index.html":{}}}],["optional",{"_index":209,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["ortodoxa",{"_index":374,"title":{},"body":{"injectables/BooksService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["overview",{"_index":614,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":522,"title":{"dependencies.html":{}},"body":{}}],["pages",{"_index":117,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["palabras",{"_index":354,"title":{},"body":{"injectables/BooksService.html":{}}}],["para",{"_index":231,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["param",{"_index":251,"title":{},"body":{"controllers/BooksController.html":{}}}],["param('bookid",{"_index":288,"title":{},"body":{"controllers/BooksController.html":{}}}],["parameters",{"_index":207,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["params",{"_index":327,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(bookid",{"_index":431,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(this.getvalue('tutorial_port",{"_index":470,"title":{},"body":{"classes/ConfigService.html":{}}}],["parámetros",{"_index":230,"title":{},"body":{"controllers/BooksController.html":{}}}],["passport",{"_index":495,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":473,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(__dirname",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pero",{"_index":341,"title":{},"body":{"injectables/BooksService.html":{}}}],["personal",{"_index":338,"title":{},"body":{"injectables/BooksService.html":{}}}],["pg",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":598,"title":{},"body":{"index.html":{}}}],["poco",{"_index":369,"title":{},"body":{"injectables/BooksService.html":{}}}],["por",{"_index":351,"title":{},"body":{"injectables/BooksService.html":{}}}],["porque",{"_index":395,"title":{},"body":{"injectables/BooksService.html":{}}}],["port",{"_index":469,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":253,"title":{},"body":{"controllers/BooksController.html":{}}}],["post()@apioperation({summary",{"_index":195,"title":{},"body":{"controllers/BooksController.html":{}}}],["prefix",{"_index":184,"title":{},"body":{"controllers/BooksController.html":{}}}],["presente",{"_index":367,"title":{},"body":{"injectables/BooksService.html":{}}}],["pretende",{"_index":390,"title":{},"body":{"injectables/BooksService.html":{}}}],["pretexto",{"_index":360,"title":{},"body":{"injectables/BooksService.html":{}}}],["primarygeneratedcolumn",{"_index":171,"title":{},"body":{"classes/Book-1.html":{}}}],["private",{"_index":278,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["production",{"_index":578,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":554,"title":{},"body":{"index.html":{}}}],["project",{"_index":589,"title":{},"body":{"index.html":{}}}],["promise",{"_index":210,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["properties",{"_index":111,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["property",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["public",{"_index":438,"title":{},"body":{"classes/ConfigService.html":{}}}],["publisher",{"_index":118,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["put",{"_index":256,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid",{"_index":296,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid')@apioperation({summary",{"_index":241,"title":{},"body":{"controllers/BooksController.html":{}}}],["pérez",{"_index":376,"title":{},"body":{"injectables/BooksService.html":{}}}],["quijote",{"_index":132,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["ratos",{"_index":339,"title":{},"body":{"injectables/BooksService.html":{}}}],["read",{"_index":599,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["reflect",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["reflexionar",{"_index":368,"title":{},"body":{"injectables/BooksService.html":{}}}],["relato",{"_index":336,"title":{},"body":{"injectables/BooksService.html":{}}}],["releer",{"_index":357,"title":{},"body":{"injectables/BooksService.html":{}}}],["remotos",{"_index":365,"title":{},"body":{"injectables/BooksService.html":{}}}],["repository",{"_index":318,"title":{},"body":{"injectables/BooksService.html":{},"index.html":{}}}],["req",{"_index":252,"title":{},"body":{"controllers/BooksController.html":{}}}],["request",{"_index":193,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['method",{"_index":303,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['url",{"_index":305,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['user'].username",{"_index":306,"title":{},"body":{"controllers/BooksController.html":{}}}],["require('dotenv').config",{"_index":455,"title":{},"body":{"classes/ConfigService.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["reverte",{"_index":377,"title":{},"body":{"injectables/BooksService.html":{}}}],["reyes",{"_index":402,"title":{},"body":{"injectables/BooksService.html":{}}}],["rimraf",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":573,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["santillana",{"_index":145,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["santillana'})@column",{"_index":165,"title":{},"body":{"classes/Book-1.html":{}}}],["scalable",{"_index":559,"title":{},"body":{"index.html":{}}}],["secretorkey",{"_index":501,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ser",{"_index":391,"title":{},"body":{"injectables/BooksService.html":{}}}],["server",{"_index":560,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":276,"title":{},"body":{"controllers/BooksController.html":{}}}],["session",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":561,"title":{},"body":{"index.html":{}}}],["siempre",{"_index":342,"title":{},"body":{"injectables/BooksService.html":{}}}],["siglos",{"_index":348,"title":{},"body":{"injectables/BooksService.html":{}}}],["sobre",{"_index":237,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["sponsors",{"_index":592,"title":{},"body":{"index.html":{}}}],["src/.../config.service.ts",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["src/books/book.class.ts",{"_index":110,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/books/book.class.ts:10",{"_index":137,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:15",{"_index":135,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:18",{"_index":125,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:21",{"_index":146,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:24",{"_index":144,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:27",{"_index":142,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:4",{"_index":140,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.class.ts:7",{"_index":147,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.dto.ts",{"_index":174,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/books/book.dto.ts:13",{"_index":176,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:16",{"_index":175,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:19",{"_index":180,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:22",{"_index":179,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:25",{"_index":178,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:5",{"_index":181,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:8",{"_index":177,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.entity.ts",{"_index":152,"title":{},"body":{"classes/Book-1.html":{},"coverage.html":{}}}],["src/books/book.entity.ts:12",{"_index":168,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:16",{"_index":158,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:22",{"_index":156,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:26",{"_index":154,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:30",{"_index":166,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:34",{"_index":164,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:38",{"_index":162,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.entity.ts:8",{"_index":160,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/books.controller.ts",{"_index":183,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:118",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:142",{"_index":244,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:155",{"_index":248,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:52",{"_index":229,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:72",{"_index":238,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:98",{"_index":206,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.module.ts",{"_index":311,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":315,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:34",{"_index":319,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:40",{"_index":326,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:44",{"_index":329,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:48",{"_index":322,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:52",{"_index":324,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:63",{"_index":331,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:9",{"_index":416,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/config/config/config.service.ts",{"_index":437,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/config/config.service.ts:17",{"_index":447,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:22",{"_index":449,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:5",{"_index":444,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config/config/config.service.ts:8",{"_index":453,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/main.ts",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utilities/auth.module.ts",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/utilities/jwt.strategy.ts",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/utilities/jwt.strategy.ts:14",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utilities/jwt.strategy.ts:6",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["stack",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":574,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":577,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":579,"title":{},"body":{"index.html":{}}}],["started",{"_index":553,"title":{"index.html":{}},"body":{}}],["starter",{"_index":567,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":249,"title":{},"body":{"controllers/BooksController.html":{}}}],["statements",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":281,"title":{},"body":{"controllers/BooksController.html":{}}}],["statuscode",{"_index":247,"title":{},"body":{"controllers/BooksController.html":{}}}],["stay",{"_index":602,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":494,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["summary",{"_index":280,"title":{},"body":{"controllers/BooksController.html":{}}}],["super",{"_index":498,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":593,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suyas",{"_index":355,"title":{},"body":{"injectables/BooksService.html":{}}}],["svg",{"_index":612,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":479,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":582,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":585,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":584,"title":{},"body":{"index.html":{}}}],["tests",{"_index":581,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":591,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.booksrepository",{"_index":425,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.delete",{"_index":430,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":422,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone",{"_index":423,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone(bookid",{"_index":433,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(newbook",{"_index":424,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(updated",{"_index":436,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.createbook(newbook",{"_index":293,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebook(bookid",{"_index":295,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall(request.query",{"_index":285,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findbook(bookid",{"_index":290,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebook(bookid",{"_index":297,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.env[key",{"_index":459,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_database",{"_index":476,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_host",{"_index":468,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_password",{"_index":474,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_user",{"_index":472,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":465,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.log",{"_index":300,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.writelog(starttime",{"_index":286,"title":{},"body":{"controllers/BooksController.html":{}}}],["throw",{"_index":460,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["throwonmissing",{"_index":452,"title":{},"body":{"classes/ConfigService.html":{}}}],["tiempos",{"_index":364,"title":{},"body":{"injectables/BooksService.html":{}}}],["title",{"_index":119,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"injectables/BooksService.html":{}}}],["token",{"_index":275,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":603,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":432,"title":{},"body":{"injectables/BooksService.html":{}}}],["transports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["través",{"_index":346,"title":{},"body":{"injectables/BooksService.html":{}}}],["true",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["tutorial_database",{"_index":485,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_host",{"_index":481,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_password",{"_index":484,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_port",{"_index":482,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_user",{"_index":483,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":608,"title":{},"body":{"index.html":{}}}],["type",{"_index":120,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["typeorm",{"_index":172,"title":{},"body":{"classes/Book-1.html":{},"injectables/BooksService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([book",{"_index":314,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forroot(configservice.gettypeormconfig",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":450,"title":{},"body":{"classes/ConfigService.html":{}}}],["typescript",{"_index":566,"title":{},"body":{"index.html":{}}}],["ui",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":197,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["una",{"_index":233,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["undefined",{"_index":457,"title":{},"body":{"classes/ConfigService.html":{}}}],["unit",{"_index":580,"title":{},"body":{"index.html":{}}}],["updatebook",{"_index":190,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebook(bookid",{"_index":330,"title":{},"body":{"injectables/BooksService.html":{}}}],["updatebook(request",{"_index":240,"title":{},"body":{"controllers/BooksController.html":{}}}],["updated",{"_index":434,"title":{},"body":{"injectables/BooksService.html":{}}}],["url",{"_index":304,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards",{"_index":258,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards(authguard('jwt",{"_index":273,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{}}}],["username",{"_index":471,"title":{},"body":{"classes/ConfigService.html":{}}}],["utilities/auth.module",{"_index":313,"title":{},"body":{"modules/BooksModule.html":{}}}],["validate",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":333,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":617,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veraz",{"_index":392,"title":{},"body":{"injectables/BooksService.html":{}}}],["void",{"_index":250,"title":{},"body":{"controllers/BooksController.html":{}}}],["watch",{"_index":575,"title":{},"body":{"index.html":{}}}],["website",{"_index":606,"title":{},"body":{"index.html":{}}}],["whereinids(bookid",{"_index":428,"title":{},"body":{"injectables/BooksService.html":{}}}],["winston",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["winston.format.combine",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.errors",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.json",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.splat",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.timestamp",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":269,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["writelog",{"_index":191,"title":{},"body":{"controllers/BooksController.html":{}}}],["writelog(starttime",{"_index":246,"title":{},"body":{"controllers/BooksController.html":{}}}],["www.imagen.com/quijote.png",{"_index":141,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["www.imagen.com/quijote.png'})@column",{"_index":161,"title":{},"body":{"classes/Book-1.html":{}}}],["y",{"_index":358,"title":{},"body":{"injectables/BooksService.html":{}}}],["you'd",{"_index":596,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BooksModule } from './books/books.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { configService } from './config/config/config.service';\nimport { WinstonModule } from 'nest-winston';\nimport * as winston from 'winston';\nimport * as path from 'path';\n\n@Module({\n  imports: [\n    BooksModule,\n    TypeOrmModule.forRoot(configService.getTypeOrmConfig()),\n    WinstonModule.forRoot({\n      level: 'info',\n      format: winston.format.combine(\n        winston.format.timestamp({\n          format: 'YYYY-MM-DD HH:mm:ss',\n        }),\n        winston.format.errors({ stack: true }),\n        winston.format.splat(),\n        winston.format.json(),\n      ),\n      transports: [\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/debug/'),\n          filename: 'debug.log',\n          level: 'debug',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/error/'),\n          filename: 'error.log',\n          level: 'error',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/info/'),\n          filename: 'info.log',\n          level: 'info',\n        }),\n        new winston.transports.Console({ level: 'debug' }),\n      ],\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n  imports: [\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n  ],\n  controllers: [],\n  providers: [JwtStrategy],\n  exports: [PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Miguel de Cervantes'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Novela'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 592})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Santillana'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Don Quijote de la Mancha'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.class.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class Book {\n  @ApiProperty({ example: 99 })\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  image_url: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book-1.html":{"url":"classes/Book-1.html","title":"class - Book-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Miguel de Cervantes'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})@Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Novela'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 99})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'www.imagen.com/quijote.png'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 592})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Santillana'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Don Quijote de la Mancha'})@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.entity.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Book {\n  @ApiProperty({ example: 99 })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  @Column()\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  @Column()\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  @Column('text')\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  @Column()\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  @Column()\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  @Column()\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  @Column()\n  image_url: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Miguel de Cervantes'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Novela'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 592})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Santillana'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Don Quijote de la Mancha'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/books/book.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class BookDto {\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  readonly title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  readonly genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  readonly author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  readonly publisher: string;\n\n  @ApiProperty({ example: 592 })\n  readonly pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  readonly image_url: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                deleteBook\n                            \n                            \n                                findAll\n                            \n                            \n                                findBook\n                            \n                            \n                                updateBook\n                            \n                            \n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBook\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBook(request: Request, newBook: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear un libro'})@ApiResponse({status: 201, description: 'Datos del libro creado', type: Book})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Libro a crear\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Devuelve el libro creado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBook\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBook(request: Request, bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')@ApiOperation({summary: 'Eliminar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro eliminado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Eliminar un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtener lista de libros'})@ApiResponse({status: 201, description: 'Lista de libros', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Lista de parámetros para filtrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Devuelve una lista de libros\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBook\n                        \n                        \n                    \n                \n            \n            \n                \nfindBook(request: Request, bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')@ApiOperation({summary: 'Devuelve información sobre un libro específico'})@ApiResponse({status: 201, description: 'Datos del libro'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a buscar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Devuelve un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBook\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBook(request: Request, bookId: string, newBook: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')@ApiOperation({summary: 'Actualizar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro actualizado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificador del libro a modificar\n\n                                    \n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Libro actualizado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Modificar un libro específico\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeLog\n                        \n                        \n                    \n                \n            \n            \n                \nwriteLog(startTime: any, request: any, statusCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.controller.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Req,\n  Post,\n  Body,\n  Delete,\n  Put,\n  Inject,\n  UseGuards,\n} from '@nestjs/common';\nimport { BooksService } from './books.service';\nimport { Request } from 'express';\nimport { BookDto } from './book.dto';\nimport {\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Book } from './book.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n@ApiTags('book')\n@Controller('books')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class BooksController {\n  /**\n   *\n   * @param {BooksService} booksService  Servicio de libros\n   */\n  constructor(\n    private booksService: BooksService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   *\n   * @returns {Book[]} Devuelve una lista de libros\n   * @param {Request} request Lista de parámetros para filtrar\n   */\n  @Get()\n  @ApiOperation({ summary: 'Obtener lista de libros' })\n  @ApiResponse({\n    status: 201,\n    description: 'Lista de libros',\n    type: Book,\n  })\n  findAll(@Req() request: Request): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.findAll(request.query);\n\n    this.writeLog(startTime, request, 200);\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Devuelve un libro específico\n   * @param {string} bookId  Identificador del libro a buscar\n   */\n\n  @Get(':bookId')\n  @ApiOperation({ summary: 'Devuelve información sobre un libro específico' })\n  @ApiResponse({\n    status: 201,\n    description: 'Datos del libro',\n  })\n  findBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n  ): Promise {\n    console.log(request);\n    let startTime = Date.now();\n    let data = this.booksService.findBook(bookId);\n\n    this.writeLog(startTime, request, 200);\n\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Devuelve el libro creado\n   * @param {JSON} newBook  Libro a crear\n   */\n  @Post()\n  @ApiOperation({ summary: 'Crear un libro' })\n  @ApiResponse({\n    status: 201,\n    description: 'Datos del libro creado',\n    type: Book,\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  createBook(@Req() request: Request, @Body() newBook: BookDto): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.createBook(newBook);\n\n    this.writeLog(startTime, request, 201);\n\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Eliminar un libro específico\n   * @param {string} bookId  Identificador del libro a eliminar\n   */\n  @Delete(':bookId')\n  @ApiOperation({ summary: 'Eliminar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro eliminado',\n  })\n  deleteBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n  ): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.deleteBook(bookId);\n\n    this.writeLog(startTime, request, 200);\n\n    return data;\n  }\n\n  /**\n   *\n   * @returns {Book} Modificar un libro específico\n   * @param {string} bookId  Identificador del libro a modificar\n   * @param {JSON} newBook Libro actualizado\n   */\n  @Put(':bookId')\n  @ApiOperation({ summary: 'Actualizar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro actualizado',\n  })\n  updateBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Body() newBook: BookDto,\n  ): Promise {\n    let startTime = Date.now();\n    let data = this.booksService.updateBook(bookId, newBook);\n\n    this.writeLog(startTime, request, 200);\n\n    return data;\n  }\n\n  writeLog(startTime: any, request: any, statusCode: number) {\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n\n    this.logger.log({\n      level: 'info',\n      message: '',\n      statusCode: statusCode,\n      method: request['method'],\n      url: request['url'],\n      user: request['user'].username,\n      duration: elapsedTime,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_imports\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Book } from './book.entity';\nimport { BooksService } from './books.service';\nimport { BooksController } from './books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from '../utilities/auth.module';\n@Module({\n  imports: [TypeOrmModule.forFeature([Book]), AuthModule],\n  providers: [BooksService],\n  controllers: [BooksController],\n})\nexport class BooksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBook\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBook(newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteBook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateBook\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(bookId: string, newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            books\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Book[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      title: 'Una historia de España',\n      genre: 'Historia',\n      description:\n        'Un relato ameno, personal, a ratos irónico, pero siempre único, de nuestra accidentada historia a través de los siglos. Una obra concebida por el autor para, en palabras suyas, «divertirme, releer y disfrutar; un pretexto para mirar atrás desde los tiempos remotos hasta el presente, reflexionar un poco sobre ello y contarlo por escrito de una manera poco ortodoxa.',\n      author: 'Arturo Pérez-Reverte',\n      publisher: 'Alfaguara',\n      pages: 256,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/41%2B-e981m1L._SX311_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Historia de España contada para escépticos',\n      genre: 'Historia',\n      description:\n        'Como escribe el autor, no pretende ser veraz, justa y desapasionada, porque ninguna historia lo es. No está hecha para halagar a reyes y gobernantes, ni pretende halagar a los banqueros, ni a la Conferencia Episcopal, ni al colectivo gay.',\n      author: 'Juan Eslava Galán',\n      publisher: 'Booket',\n      pages: 592,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/51IyZ5Mq8YL._SX326_BO1,204,203,200_.jpg',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/books/books.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { BookDto } from './book.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Book } from './book.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class BooksService {\n  books: Book[] = [\n    {\n      id: 1,\n      title: 'Una historia de España',\n      genre: 'Historia',\n      description:\n        'Un relato ameno, personal, a ratos irónico, pero siempre único, de nuestra accidentada historia a través de los siglos. Una obra concebida por el autor para, en palabras suyas, «divertirme, releer y disfrutar; un pretexto para mirar atrás desde los tiempos remotos hasta el presente, reflexionar un poco sobre ello y contarlo por escrito de una manera poco ortodoxa.',\n      author: 'Arturo Pérez-Reverte',\n      publisher: 'Alfaguara',\n      pages: 256,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/41%2B-e981m1L._SX311_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Historia de España contada para escépticos',\n      genre: 'Historia',\n      description:\n        'Como escribe el autor, no pretende ser veraz, justa y desapasionada, porque ninguna historia lo es. No está hecha para halagar a reyes y gobernantes, ni pretende halagar a los banqueros, ni a la Conferencia Episcopal, ni al colectivo gay.',\n      author: 'Juan Eslava Galán',\n      publisher: 'Booket',\n      pages: 592,\n      image_url:\n        'https://images-na.ssl-images-amazon.com/images/I/51IyZ5Mq8YL._SX326_BO1,204,203,200_.jpg',\n    },\n  ];\n\n  constructor(\n    @InjectRepository(Book) private booksRepository: Repository,\n  ) {}\n\n  async findAll(params): Promise {\n    return await this.booksRepository.find();\n  }\n\n  async findBook(bookId: string): Promise {\n    return await this.booksRepository.findOne({ where: { id: bookId } });\n  }\n\n  createBook(newBook: BookDto): Promise {\n    return this.booksRepository.save(newBook);\n  }\n\n  async deleteBook(bookId: string): Promise {\n    /*    return await this.booksRepository\n      .createQueryBuilder()\n      .delete()\n      .from(Book)\n      .whereInIds(bookId)\n      .execute();\n*/\n    return await this.booksRepository.delete({ id: parseInt(bookId) });\n  }\n\n  async updateBook(bookId: string, newBook: BookDto): Promise {\n    let toUpdate = await this.booksRepository.findOne(bookId);\n\n    let updated = Object.assign(toUpdate, newBook);\n\n    return this.booksRepository.save(updated);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/config/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ensureValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTypeOrmConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypeOrmConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config/config.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nrequire('dotenv').config();\n\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) {}\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'mysql',\n\n      host: this.getValue('TUTORIAL_HOST'),\n      port: parseInt(this.getValue('TUTORIAL_PORT')),\n      username: this.getValue('TUTORIAL_USER'),\n      password: this.getValue('TUTORIAL_PASSWORD'),\n      database: this.getValue('TUTORIAL_DATABASE'),\n\n      entities: ['dist/**/*.entity.js'],\n      synchronize: true,\n    };\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n]);\n\nexport { configService };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utilities/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'MyS3cr3tK3Y',\n    });\n  }\n\n  async validate(payload: any): Promise {\n    if (!payload) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/books/book.class.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.dto.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/config/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/config/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            @nestjs/typeorm : ^7.1.0\n        \n            mysql : ^2.18.1\n        \n            nest-winston : ^1.3.6\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.25\n        \n            winston : ^3.3.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config/config.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
